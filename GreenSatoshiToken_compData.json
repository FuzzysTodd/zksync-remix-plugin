{
	"compilerInput": "{\"language\":\"Solidity\",\"sources\":{\"gist-c3c4eca9058578e810c73480a4308aee/GreenSatoshiToken.sol\":{\"content\":\"/*\\n  \\n ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\\n██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\\n██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\\n██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\\n ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\\n\\nFind any smart contract, and build your project faster: https://www.cookbook.dev\\nTwitter: https://twitter.com/cookbook_dev\\nDiscord: https://discord.gg/WzsfPcfHrk\\n\\nFind this contract on Cookbook: https://www.cookbook.dev/contracts/GreenSatoshiToken/?utm=code\\n*/\\n\\n// contracts/GreenSatoshiToken.sol\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./ERC20.sol\\\";\\nimport \\\"./ERC20Burnable.sol\\\";\\nimport \\\"./Ownable.sol\\\";\\n\\n/**\\n * Green Satoshi Token\\n * @author STEPN\\n */\\ncontract GreenSatoshiToken is ERC20, ERC20Burnable, Ownable {\\n    constructor() ERC20(\\\"GreenSatoshiToken\\\", \\\"GST\\\") {}\\n\\n    function mint(address to, uint256 amount) public onlyOwner {\\n        _mint(to, amount);\\n    }\\n\\n    function decimals() public view virtual override returns (uint8) {\\n        return 8;\\n    }\\n}\\n\"},\"gist-c3c4eca9058578e810c73480a4308aee/Ownable.sol\":{\"content\":\"/*\\n  \\n ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\\n██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\\n██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\\n██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\\n ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\\n\\nFind any smart contract, and build your project faster: https://www.cookbook.dev\\nTwitter: https://twitter.com/cookbook_dev\\nDiscord: https://discord.gg/WzsfPcfHrk\\n\\nFind this contract on Cookbook: https://www.cookbook.dev/contracts/GreenSatoshiToken/?utm=code\\n*/\\n\\n// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\"},\"gist-c3c4eca9058578e810c73480a4308aee/ERC20Burnable.sol\":{\"content\":\"/*\\n  \\n ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\\n██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\\n██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\\n██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\\n ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\\n\\nFind any smart contract, and build your project faster: https://www.cookbook.dev\\nTwitter: https://twitter.com/cookbook_dev\\nDiscord: https://discord.gg/WzsfPcfHrk\\n\\nFind this contract on Cookbook: https://www.cookbook.dev/contracts/GreenSatoshiToken/?utm=code\\n*/\\n\\n// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./ERC20.sol\\\";\\nimport \\\"./Context.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\\n * tokens and those that they have an allowance for, in a way that can be\\n * recognized off-chain (via event analysis).\\n */\\nabstract contract ERC20Burnable is Context, ERC20 {\\n    /**\\n     * @dev Destroys `amount` tokens from the caller.\\n     *\\n     * See {ERC20-_burn}.\\n     */\\n    function burn(uint256 amount) public virtual {\\n        _burn(_msgSender(), amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\\n     * allowance.\\n     *\\n     * See {ERC20-_burn} and {ERC20-allowance}.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have allowance for ``accounts``'s tokens of at least\\n     * `amount`.\\n     */\\n    function burnFrom(address account, uint256 amount) public virtual {\\n        _spendAllowance(account, _msgSender(), amount);\\n        _burn(account, amount);\\n    }\\n}\\n\"},\"gist-c3c4eca9058578e810c73480a4308aee/ERC20.sol\":{\"content\":\"/*\\n  \\n ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\\n██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\\n██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\\n██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\\n ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\\n\\nFind any smart contract, and build your project faster: https://www.cookbook.dev\\nTwitter: https://twitter.com/cookbook_dev\\nDiscord: https://discord.gg/WzsfPcfHrk\\n\\nFind this contract on Cookbook: https://www.cookbook.dev/contracts/GreenSatoshiToken/?utm=code\\n*/\\n\\n// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./IERC20Metadata.sol\\\";\\nimport \\\"./Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, _allowances[owner][spender] + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = _allowances[owner][spender];\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n        }\\n        _balances[to] += amount;\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Spend `amount` form the allowance of `owner` toward `spender`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\"},\"gist-c3c4eca9058578e810c73480a4308aee/Context.sol\":{\"content\":\"/*\\n  \\n ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\\n██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\\n██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\\n██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\\n ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\\n\\nFind any smart contract, and build your project faster: https://www.cookbook.dev\\nTwitter: https://twitter.com/cookbook_dev\\nDiscord: https://discord.gg/WzsfPcfHrk\\n\\nFind this contract on Cookbook: https://www.cookbook.dev/contracts/GreenSatoshiToken/?utm=code\\n*/\\n\\n// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\"},\"gist-c3c4eca9058578e810c73480a4308aee/IERC20Metadata.sol\":{\"content\":\"/*\\n  \\n ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\\n██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\\n██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\\n██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\\n ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\\n\\nFind any smart contract, and build your project faster: https://www.cookbook.dev\\nTwitter: https://twitter.com/cookbook_dev\\nDiscord: https://discord.gg/WzsfPcfHrk\\n\\nFind this contract on Cookbook: https://www.cookbook.dev/contracts/GreenSatoshiToken/?utm=code\\n*/\\n\\n// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\"},\"gist-c3c4eca9058578e810c73480a4308aee/IERC20.sol\":{\"content\":\"/*\\n  \\n ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\\n██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\\n██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\\n██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\\n ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\\n\\nFind any smart contract, and build your project faster: https://www.cookbook.dev\\nTwitter: https://twitter.com/cookbook_dev\\nDiscord: https://discord.gg/WzsfPcfHrk\\n\\nFind this contract on Cookbook: https://www.cookbook.dev/contracts/GreenSatoshiToken/?utm=code\\n*/\\n\\n// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\"}},\"settings\":{\"optimizer\":{\"enabled\":true,\"runs\":200},\"outputSelection\":{\"*\":{\"\":[\"ast\"],\"*\":[\"abi\",\"metadata\",\"devdoc\",\"userdoc\",\"storageLayout\",\"evm.legacyAssembly\",\"evm.bytecode\",\"evm.deployedBytecode\",\"evm.methodIdentifiers\",\"evm.gasEstimates\",\"evm.assembly\"]}}}}",
	"name": "GreenSatoshiToken",
	"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"STEPN\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Green Satoshi Token\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"gist-c3c4eca9058578e810c73480a4308aee/GreenSatoshiToken.sol\":\"GreenSatoshiToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"gist-c3c4eca9058578e810c73480a4308aee/Context.sol\":{\"keccak256\":\"0xd8d2154c1b94fd74aa8f29e9880021da7874f52a58b3a91d12b02ba6c7557219\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25d91e83f2623c0fbea826b929e0f04dc2500b9175dcf687004f71c599a2b175\",\"dweb:/ipfs/QmaDRFHPVyBEoAswPGQiW5BgUY6XZsvMhfbmmosZe1z76Z\"]},\"gist-c3c4eca9058578e810c73480a4308aee/ERC20.sol\":{\"keccak256\":\"0x0c53b0b7eb0422ed575a93bdb3cc731c0463dbb1ee7a77540aae2a0ec29b47d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b0771bbe6ae8ad3ab4c3136e39b849968466620a6eccc282b22b0a2f484fd5c\",\"dweb:/ipfs/Qmac4YAH1bs19WRAUdLcK98Zvfm9d9vTsZs8KWdVXp8PpB\"]},\"gist-c3c4eca9058578e810c73480a4308aee/ERC20Burnable.sol\":{\"keccak256\":\"0xce79ff7b6a16d3da5729416d75d08aa8443bd31ab377fc09997045592fb4cab8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://415166f501891b544d4930459f7d029562b8a94c560355bbbd877ad70632722c\",\"dweb:/ipfs/QmNhS4EuMsMCb8i2gTyT2DdHQng22piUVxSu4bd2FmiWdw\"]},\"gist-c3c4eca9058578e810c73480a4308aee/GreenSatoshiToken.sol\":{\"keccak256\":\"0x5d068e792b0344b49b4a9f28128ec4393503206db1c81e3a4ac8eb9a86388ef2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fcb689c3fcb03ccea9306aff27ae0c39f35eb836e8c8ea6fd8b4471cce724923\",\"dweb:/ipfs/Qmbfv3BqN4UqrmhpJDLxrjUqTRrHmzkrucWZDkobDibv7L\"]},\"gist-c3c4eca9058578e810c73480a4308aee/IERC20.sol\":{\"keccak256\":\"0xd2a9c3faf34de467235b36785aee18532567b3948ca7b7eee2a6802ba20114cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8c182a82d76d37fc21f6c9c67dcb605445816a3b0e7a2b13bf0968d7e92e706\",\"dweb:/ipfs/QmUYf8kvinZrs2hg5McyatZDgo71bLNCcMpfzCmGuKic6c\"]},\"gist-c3c4eca9058578e810c73480a4308aee/IERC20Metadata.sol\":{\"keccak256\":\"0x63e17a9e542193a69a20a7c98e205bd9d50354c931784c63b5c69d76a9987151\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://375f5e17d7f33139ae805bd9d30cf443f1a9791ac0f13828b37dcf2fea0d77ec\",\"dweb:/ipfs/QmdgZYH1vrLxbsUz5z8RZAoSUhyZqKsfmNLs5neEm15syT\"]},\"gist-c3c4eca9058578e810c73480a4308aee/Ownable.sol\":{\"keccak256\":\"0x1e17093fef59439fe08cb3a0c0395ef9a6247b5fd4ac2936dfeaf0631ef09b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd245b60c57a6cb904e1336ea693a252bd0257c626c296530f25150354fbd1e7\",\"dweb:/ipfs/QmSezaiWCnXghxPiEHjJRCkHdJKWQdD4Evw87oKM5dhWuS\"]}},\"version\":1}",
	"bytecode": {
		"functionDebugData": {
			"@_66": {
				"entryPoint": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"id": 66,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@_673": {
				"entryPoint": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"id": 673,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@_825": {
				"entryPoint": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"id": 825,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@_msgSender_11": {
				"entryPoint": 154,
				"id": 11,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@_transferOwnership_905": {
				"entryPoint": 158,
				"id": 905,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"array_dataslot_string_storage": {
				"entryPoint": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"id": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"clean_up_bytearray_end_slots_string_storage": {
				"entryPoint": 317,
				"id": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
				"entryPoint": 399,
				"id": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"extract_byte_array_length": {
				"entryPoint": 259,
				"id": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"extract_used_part_and_set_length_of_short_byte_array": {
				"entryPoint": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"id": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"panic_error_0x41": {
				"entryPoint": 239,
				"id": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"parameterSlots": 0,
				"returnSlots": 0
			}
		},
		"generatedSources": [
			{
				"ast": {
					"nodeType": "YulBlock",
					"src": "0:2732:7",
					"statements": [
						{
							"nodeType": "YulBlock",
							"src": "6:3:7",
							"statements": []
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "46:95:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "63:1:7",
													"type": "",
													"value": "0"
												},
												{
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "70:3:7",
															"type": "",
															"value": "224"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "75:10:7",
															"type": "",
															"value": "0x4e487b71"
														}
													],
													"functionName": {
														"name": "shl",
														"nodeType": "YulIdentifier",
														"src": "66:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "66:20:7"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "56:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "56:31:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "56:31:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "103:1:7",
													"type": "",
													"value": "4"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "106:4:7",
													"type": "",
													"value": "0x41"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "96:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "96:15:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "96:15:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "127:1:7",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "130:4:7",
													"type": "",
													"value": "0x24"
												}
											],
											"functionName": {
												"name": "revert",
												"nodeType": "YulIdentifier",
												"src": "120:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "120:15:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "120:15:7"
									}
								]
							},
							"name": "panic_error_0x41",
							"nodeType": "YulFunctionDefinition",
							"src": "14:127:7"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "201:325:7",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "211:22:7",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "225:1:7",
													"type": "",
													"value": "1"
												},
												{
													"name": "data",
													"nodeType": "YulIdentifier",
													"src": "228:4:7"
												}
											],
											"functionName": {
												"name": "shr",
												"nodeType": "YulIdentifier",
												"src": "221:3:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "221:12:7"
										},
										"variableNames": [
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "211:6:7"
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "242:38:7",
										"value": {
											"arguments": [
												{
													"name": "data",
													"nodeType": "YulIdentifier",
													"src": "272:4:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "278:1:7",
													"type": "",
													"value": "1"
												}
											],
											"functionName": {
												"name": "and",
												"nodeType": "YulIdentifier",
												"src": "268:3:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "268:12:7"
										},
										"variables": [
											{
												"name": "outOfPlaceEncoding",
												"nodeType": "YulTypedName",
												"src": "246:18:7",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "319:31:7",
											"statements": [
												{
													"nodeType": "YulAssignment",
													"src": "321:27:7",
													"value": {
														"arguments": [
															{
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "335:6:7"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "343:4:7",
																"type": "",
																"value": "0x7f"
															}
														],
														"functionName": {
															"name": "and",
															"nodeType": "YulIdentifier",
															"src": "331:3:7"
														},
														"nodeType": "YulFunctionCall",
														"src": "331:17:7"
													},
													"variableNames": [
														{
															"name": "length",
															"nodeType": "YulIdentifier",
															"src": "321:6:7"
														}
													]
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "outOfPlaceEncoding",
													"nodeType": "YulIdentifier",
													"src": "299:18:7"
												}
											],
											"functionName": {
												"name": "iszero",
												"nodeType": "YulIdentifier",
												"src": "292:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "292:26:7"
										},
										"nodeType": "YulIf",
										"src": "289:61:7"
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "409:111:7",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "430:1:7",
																"type": "",
																"value": "0"
															},
															{
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "437:3:7",
																		"type": "",
																		"value": "224"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "442:10:7",
																		"type": "",
																		"value": "0x4e487b71"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "433:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:20:7"
															}
														],
														"functionName": {
															"name": "mstore",
															"nodeType": "YulIdentifier",
															"src": "423:6:7"
														},
														"nodeType": "YulFunctionCall",
														"src": "423:31:7"
													},
													"nodeType": "YulExpressionStatement",
													"src": "423:31:7"
												},
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "474:1:7",
																"type": "",
																"value": "4"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "477:4:7",
																"type": "",
																"value": "0x22"
															}
														],
														"functionName": {
															"name": "mstore",
															"nodeType": "YulIdentifier",
															"src": "467:6:7"
														},
														"nodeType": "YulFunctionCall",
														"src": "467:15:7"
													},
													"nodeType": "YulExpressionStatement",
													"src": "467:15:7"
												},
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "502:1:7",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "505:4:7",
																"type": "",
																"value": "0x24"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "495:6:7"
														},
														"nodeType": "YulFunctionCall",
														"src": "495:15:7"
													},
													"nodeType": "YulExpressionStatement",
													"src": "495:15:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "outOfPlaceEncoding",
													"nodeType": "YulIdentifier",
													"src": "365:18:7"
												},
												{
													"arguments": [
														{
															"name": "length",
															"nodeType": "YulIdentifier",
															"src": "388:6:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "396:2:7",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "lt",
														"nodeType": "YulIdentifier",
														"src": "385:2:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "385:14:7"
												}
											],
											"functionName": {
												"name": "eq",
												"nodeType": "YulIdentifier",
												"src": "362:2:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "362:38:7"
										},
										"nodeType": "YulIf",
										"src": "359:161:7"
									}
								]
							},
							"name": "extract_byte_array_length",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "data",
									"nodeType": "YulTypedName",
									"src": "181:4:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "length",
									"nodeType": "YulTypedName",
									"src": "190:6:7",
									"type": ""
								}
							],
							"src": "146:380:7"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "587:65:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "604:1:7",
													"type": "",
													"value": "0"
												},
												{
													"name": "ptr",
													"nodeType": "YulIdentifier",
													"src": "607:3:7"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "597:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "597:14:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "597:14:7"
									},
									{
										"nodeType": "YulAssignment",
										"src": "620:26:7",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "638:1:7",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "641:4:7",
													"type": "",
													"value": "0x20"
												}
											],
											"functionName": {
												"name": "keccak256",
												"nodeType": "YulIdentifier",
												"src": "628:9:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "628:18:7"
										},
										"variableNames": [
											{
												"name": "data",
												"nodeType": "YulIdentifier",
												"src": "620:4:7"
											}
										]
									}
								]
							},
							"name": "array_dataslot_string_storage",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "ptr",
									"nodeType": "YulTypedName",
									"src": "570:3:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "data",
									"nodeType": "YulTypedName",
									"src": "578:4:7",
									"type": ""
								}
							],
							"src": "531:121:7"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "738:464:7",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "771:425:7",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "785:11:7",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "795:1:7",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "_1",
															"nodeType": "YulTypedName",
															"src": "789:2:7",
															"type": ""
														}
													]
												},
												{
													"expression": {
														"arguments": [
															{
																"name": "_1",
																"nodeType": "YulIdentifier",
																"src": "816:2:7"
															},
															{
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "820:5:7"
															}
														],
														"functionName": {
															"name": "mstore",
															"nodeType": "YulIdentifier",
															"src": "809:6:7"
														},
														"nodeType": "YulFunctionCall",
														"src": "809:17:7"
													},
													"nodeType": "YulExpressionStatement",
													"src": "809:17:7"
												},
												{
													"nodeType": "YulVariableDeclaration",
													"src": "839:31:7",
													"value": {
														"arguments": [
															{
																"name": "_1",
																"nodeType": "YulIdentifier",
																"src": "861:2:7"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "865:4:7",
																"type": "",
																"value": "0x20"
															}
														],
														"functionName": {
															"name": "keccak256",
															"nodeType": "YulIdentifier",
															"src": "851:9:7"
														},
														"nodeType": "YulFunctionCall",
														"src": "851:19:7"
													},
													"variables": [
														{
															"name": "data",
															"nodeType": "YulTypedName",
															"src": "843:4:7",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulVariableDeclaration",
													"src": "883:57:7",
													"value": {
														"arguments": [
															{
																"name": "data",
																"nodeType": "YulIdentifier",
																"src": "906:4:7"
															},
															{
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "916:1:7",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "startIndex",
																				"nodeType": "YulIdentifier",
																				"src": "923:10:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "935:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "919:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "919:19:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "912:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "912:27:7"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "902:3:7"
														},
														"nodeType": "YulFunctionCall",
														"src": "902:38:7"
													},
													"variables": [
														{
															"name": "deleteStart",
															"nodeType": "YulTypedName",
															"src": "887:11:7",
															"type": ""
														}
													]
												},
												{
													"body": {
														"nodeType": "YulBlock",
														"src": "977:23:7",
														"statements": [
															{
																"nodeType": "YulAssignment",
																"src": "979:19:7",
																"value": {
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "994:4:7"
																},
																"variableNames": [
																	{
																		"name": "deleteStart",
																		"nodeType": "YulIdentifier",
																		"src": "979:11:7"
																	}
																]
															}
														]
													},
													"condition": {
														"arguments": [
															{
																"name": "startIndex",
																"nodeType": "YulIdentifier",
																"src": "959:10:7"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "971:4:7",
																"type": "",
																"value": "0x20"
															}
														],
														"functionName": {
															"name": "lt",
															"nodeType": "YulIdentifier",
															"src": "956:2:7"
														},
														"nodeType": "YulFunctionCall",
														"src": "956:20:7"
													},
													"nodeType": "YulIf",
													"src": "953:47:7"
												},
												{
													"nodeType": "YulVariableDeclaration",
													"src": "1013:41:7",
													"value": {
														"arguments": [
															{
																"name": "data",
																"nodeType": "YulIdentifier",
																"src": "1027:4:7"
															},
															{
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1037:1:7",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "1044:3:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1049:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1040:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1040:12:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1033:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:20:7"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1023:3:7"
														},
														"nodeType": "YulFunctionCall",
														"src": "1023:31:7"
													},
													"variables": [
														{
															"name": "_2",
															"nodeType": "YulTypedName",
															"src": "1017:2:7",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulVariableDeclaration",
													"src": "1067:24:7",
													"value": {
														"name": "deleteStart",
														"nodeType": "YulIdentifier",
														"src": "1080:11:7"
													},
													"variables": [
														{
															"name": "start",
															"nodeType": "YulTypedName",
															"src": "1071:5:7",
															"type": ""
														}
													]
												},
												{
													"body": {
														"nodeType": "YulBlock",
														"src": "1165:21:7",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"name": "start",
																			"nodeType": "YulIdentifier",
																			"src": "1174:5:7"
																		},
																		{
																			"name": "_1",
																			"nodeType": "YulIdentifier",
																			"src": "1181:2:7"
																		}
																	],
																	"functionName": {
																		"name": "sstore",
																		"nodeType": "YulIdentifier",
																		"src": "1167:6:7"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "1167:17:7"
																},
																"nodeType": "YulExpressionStatement",
																"src": "1167:17:7"
															}
														]
													},
													"condition": {
														"arguments": [
															{
																"name": "start",
																"nodeType": "YulIdentifier",
																"src": "1115:5:7"
															},
															{
																"name": "_2",
																"nodeType": "YulIdentifier",
																"src": "1122:2:7"
															}
														],
														"functionName": {
															"name": "lt",
															"nodeType": "YulIdentifier",
															"src": "1112:2:7"
														},
														"nodeType": "YulFunctionCall",
														"src": "1112:13:7"
													},
													"nodeType": "YulForLoop",
													"post": {
														"nodeType": "YulBlock",
														"src": "1126:26:7",
														"statements": [
															{
																"nodeType": "YulAssignment",
																"src": "1128:22:7",
																"value": {
																	"arguments": [
																		{
																			"name": "start",
																			"nodeType": "YulIdentifier",
																			"src": "1141:5:7"
																		},
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1148:1:7",
																			"type": "",
																			"value": "1"
																		}
																	],
																	"functionName": {
																		"name": "add",
																		"nodeType": "YulIdentifier",
																		"src": "1137:3:7"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "1137:13:7"
																},
																"variableNames": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "1128:5:7"
																	}
																]
															}
														]
													},
													"pre": {
														"nodeType": "YulBlock",
														"src": "1108:3:7",
														"statements": []
													},
													"src": "1104:82:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "len",
													"nodeType": "YulIdentifier",
													"src": "754:3:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "759:2:7",
													"type": "",
													"value": "31"
												}
											],
											"functionName": {
												"name": "gt",
												"nodeType": "YulIdentifier",
												"src": "751:2:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "751:11:7"
										},
										"nodeType": "YulIf",
										"src": "748:448:7"
									}
								]
							},
							"name": "clean_up_bytearray_end_slots_string_storage",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "array",
									"nodeType": "YulTypedName",
									"src": "710:5:7",
									"type": ""
								},
								{
									"name": "len",
									"nodeType": "YulTypedName",
									"src": "717:3:7",
									"type": ""
								},
								{
									"name": "startIndex",
									"nodeType": "YulTypedName",
									"src": "722:10:7",
									"type": ""
								}
							],
							"src": "657:545:7"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "1292:81:7",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "1302:65:7",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "data",
															"nodeType": "YulIdentifier",
															"src": "1317:4:7"
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1335:1:7",
																					"type": "",
																					"value": "3"
																				},
																				{
																					"name": "len",
																					"nodeType": "YulIdentifier",
																					"src": "1338:3:7"
																				}
																			],
																			"functionName": {
																				"name": "shl",
																				"nodeType": "YulIdentifier",
																				"src": "1331:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1331:11:7"
																		},
																		{
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1348:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "not",
																				"nodeType": "YulIdentifier",
																				"src": "1344:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1344:6:7"
																		}
																	],
																	"functionName": {
																		"name": "shr",
																		"nodeType": "YulIdentifier",
																		"src": "1327:3:7"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "1327:24:7"
																}
															],
															"functionName": {
																"name": "not",
																"nodeType": "YulIdentifier",
																"src": "1323:3:7"
															},
															"nodeType": "YulFunctionCall",
															"src": "1323:29:7"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "1313:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "1313:40:7"
												},
												{
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1359:1:7",
															"type": "",
															"value": "1"
														},
														{
															"name": "len",
															"nodeType": "YulIdentifier",
															"src": "1362:3:7"
														}
													],
													"functionName": {
														"name": "shl",
														"nodeType": "YulIdentifier",
														"src": "1355:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "1355:11:7"
												}
											],
											"functionName": {
												"name": "or",
												"nodeType": "YulIdentifier",
												"src": "1310:2:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "1310:57:7"
										},
										"variableNames": [
											{
												"name": "used",
												"nodeType": "YulIdentifier",
												"src": "1302:4:7"
											}
										]
									}
								]
							},
							"name": "extract_used_part_and_set_length_of_short_byte_array",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "data",
									"nodeType": "YulTypedName",
									"src": "1269:4:7",
									"type": ""
								},
								{
									"name": "len",
									"nodeType": "YulTypedName",
									"src": "1275:3:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "used",
									"nodeType": "YulTypedName",
									"src": "1283:4:7",
									"type": ""
								}
							],
							"src": "1207:166:7"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "1474:1256:7",
								"statements": [
									{
										"nodeType": "YulVariableDeclaration",
										"src": "1484:24:7",
										"value": {
											"arguments": [
												{
													"name": "src",
													"nodeType": "YulIdentifier",
													"src": "1504:3:7"
												}
											],
											"functionName": {
												"name": "mload",
												"nodeType": "YulIdentifier",
												"src": "1498:5:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "1498:10:7"
										},
										"variables": [
											{
												"name": "newLen",
												"nodeType": "YulTypedName",
												"src": "1488:6:7",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "1551:22:7",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x41",
															"nodeType": "YulIdentifier",
															"src": "1553:16:7"
														},
														"nodeType": "YulFunctionCall",
														"src": "1553:18:7"
													},
													"nodeType": "YulExpressionStatement",
													"src": "1553:18:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "newLen",
													"nodeType": "YulIdentifier",
													"src": "1523:6:7"
												},
												{
													"arguments": [
														{
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "1539:2:7",
																	"type": "",
																	"value": "64"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "1543:1:7",
																	"type": "",
																	"value": "1"
																}
															],
															"functionName": {
																"name": "shl",
																"nodeType": "YulIdentifier",
																"src": "1535:3:7"
															},
															"nodeType": "YulFunctionCall",
															"src": "1535:10:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1547:1:7",
															"type": "",
															"value": "1"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "1531:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "1531:18:7"
												}
											],
											"functionName": {
												"name": "gt",
												"nodeType": "YulIdentifier",
												"src": "1520:2:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "1520:30:7"
										},
										"nodeType": "YulIf",
										"src": "1517:56:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "slot",
													"nodeType": "YulIdentifier",
													"src": "1626:4:7"
												},
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "slot",
																	"nodeType": "YulIdentifier",
																	"src": "1664:4:7"
																}
															],
															"functionName": {
																"name": "sload",
																"nodeType": "YulIdentifier",
																"src": "1658:5:7"
															},
															"nodeType": "YulFunctionCall",
															"src": "1658:11:7"
														}
													],
													"functionName": {
														"name": "extract_byte_array_length",
														"nodeType": "YulIdentifier",
														"src": "1632:25:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "1632:38:7"
												},
												{
													"name": "newLen",
													"nodeType": "YulIdentifier",
													"src": "1672:6:7"
												}
											],
											"functionName": {
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulIdentifier",
												"src": "1582:43:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "1582:97:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "1582:97:7"
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "1688:18:7",
										"value": {
											"kind": "number",
											"nodeType": "YulLiteral",
											"src": "1705:1:7",
											"type": "",
											"value": "0"
										},
										"variables": [
											{
												"name": "srcOffset",
												"nodeType": "YulTypedName",
												"src": "1692:9:7",
												"type": ""
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "1715:23:7",
										"value": {
											"kind": "number",
											"nodeType": "YulLiteral",
											"src": "1734:4:7",
											"type": "",
											"value": "0x20"
										},
										"variables": [
											{
												"name": "srcOffset_1",
												"nodeType": "YulTypedName",
												"src": "1719:11:7",
												"type": ""
											}
										]
									},
									{
										"nodeType": "YulAssignment",
										"src": "1747:24:7",
										"value": {
											"name": "srcOffset_1",
											"nodeType": "YulIdentifier",
											"src": "1760:11:7"
										},
										"variableNames": [
											{
												"name": "srcOffset",
												"nodeType": "YulIdentifier",
												"src": "1747:9:7"
											}
										]
									},
									{
										"cases": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1817:656:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1831:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1850:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1862:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1858:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1858:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1846:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1846:20:7"
															},
															"variables": [
																{
																	"name": "loopEnd",
																	"nodeType": "YulTypedName",
																	"src": "1835:7:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1879:49:7",
															"value": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "1923:4:7"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "1893:29:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1893:35:7"
															},
															"variables": [
																{
																	"name": "dstPtr",
																	"nodeType": "YulTypedName",
																	"src": "1883:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1941:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1950:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1945:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2028:172:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dstPtr",
																					"nodeType": "YulIdentifier",
																					"src": "2053:6:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2071:3:7"
																								},
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "2076:9:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2067:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2067:19:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2061:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2061:26:7"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "2046:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2046:42:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2046:42:7"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2105:24:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dstPtr",
																					"nodeType": "YulIdentifier",
																					"src": "2119:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2127:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2115:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2115:14:7"
																		},
																		"variableNames": [
																			{
																				"name": "dstPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2105:6:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2146:40:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcOffset",
																					"nodeType": "YulIdentifier",
																					"src": "2163:9:7"
																				},
																				{
																					"name": "srcOffset_1",
																					"nodeType": "YulIdentifier",
																					"src": "2174:11:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2159:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2159:27:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcOffset",
																				"nodeType": "YulIdentifier",
																				"src": "2146:9:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1975:1:7"
																	},
																	{
																		"name": "loopEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1978:7:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1972:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1972:14:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1987:28:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1989:24:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1998:1:7"
																				},
																				{
																					"name": "srcOffset_1",
																					"nodeType": "YulIdentifier",
																					"src": "2001:11:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1994:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1994:19:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1989:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1968:3:7",
																"statements": []
															},
															"src": "1964:236:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2248:166:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2266:43:7",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "2293:3:7"
																						},
																						{
																							"name": "srcOffset",
																							"nodeType": "YulIdentifier",
																							"src": "2298:9:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2289:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2289:19:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2283:5:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2283:26:7"
																		},
																		"variables": [
																			{
																				"name": "lastValue",
																				"nodeType": "YulTypedName",
																				"src": "2270:9:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dstPtr",
																					"nodeType": "YulIdentifier",
																					"src": "2333:6:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "lastValue",
																							"nodeType": "YulIdentifier",
																							"src": "2345:9:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "2372:1:7",
																															"type": "",
																															"value": "3"
																														},
																														{
																															"name": "newLen",
																															"nodeType": "YulIdentifier",
																															"src": "2375:6:7"
																														}
																													],
																													"functionName": {
																														"name": "shl",
																														"nodeType": "YulIdentifier",
																														"src": "2368:3:7"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "2368:14:7"
																												},
																												{
																													"kind": "number",
																													"nodeType": "YulLiteral",
																													"src": "2384:3:7",
																													"type": "",
																													"value": "248"
																												}
																											],
																											"functionName": {
																												"name": "and",
																												"nodeType": "YulIdentifier",
																												"src": "2364:3:7"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "2364:24:7"
																										},
																										{
																											"arguments": [
																												{
																													"kind": "number",
																													"nodeType": "YulLiteral",
																													"src": "2394:1:7",
																													"type": "",
																													"value": "0"
																												}
																											],
																											"functionName": {
																												"name": "not",
																												"nodeType": "YulIdentifier",
																												"src": "2390:3:7"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "2390:6:7"
																										}
																									],
																									"functionName": {
																										"name": "shr",
																										"nodeType": "YulIdentifier",
																										"src": "2360:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2360:37:7"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "2356:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2356:42:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "2341:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2341:58:7"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "2326:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2326:74:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2326:74:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "loopEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2219:7:7"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2228:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2216:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2216:19:7"
															},
															"nodeType": "YulIf",
															"src": "2213:201:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2434:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2448:1:7",
																						"type": "",
																						"value": "1"
																					},
																					{
																						"name": "newLen",
																						"nodeType": "YulIdentifier",
																						"src": "2451:6:7"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2444:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2444:14:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2460:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2440:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2440:22:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "2427:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2427:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2427:36:7"
														}
													]
												},
												"nodeType": "YulCase",
												"src": "1810:663:7",
												"value": {
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "1815:1:7",
													"type": "",
													"value": "1"
												}
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2490:234:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2504:14:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2517:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2508:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2553:67:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2571:35:7",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "2590:3:7"
																						},
																						{
																							"name": "srcOffset",
																							"nodeType": "YulIdentifier",
																							"src": "2595:9:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2586:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2586:19:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2580:5:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2580:26:7"
																		},
																		"variableNames": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2571:5:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"name": "newLen",
																"nodeType": "YulIdentifier",
																"src": "2534:6:7"
															},
															"nodeType": "YulIf",
															"src": "2531:89:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2640:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2699:5:7"
																			},
																			{
																				"name": "newLen",
																				"nodeType": "YulIdentifier",
																				"src": "2706:6:7"
																			}
																		],
																		"functionName": {
																			"name": "extract_used_part_and_set_length_of_short_byte_array",
																			"nodeType": "YulIdentifier",
																			"src": "2646:52:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2646:67:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "2633:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2633:81:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2633:81:7"
														}
													]
												},
												"nodeType": "YulCase",
												"src": "2482:242:7",
												"value": "default"
											}
										],
										"expression": {
											"arguments": [
												{
													"name": "newLen",
													"nodeType": "YulIdentifier",
													"src": "1790:6:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "1798:2:7",
													"type": "",
													"value": "31"
												}
											],
											"functionName": {
												"name": "gt",
												"nodeType": "YulIdentifier",
												"src": "1787:2:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "1787:14:7"
										},
										"nodeType": "YulSwitch",
										"src": "1780:944:7"
									}
								]
							},
							"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "slot",
									"nodeType": "YulTypedName",
									"src": "1459:4:7",
									"type": ""
								},
								{
									"name": "src",
									"nodeType": "YulTypedName",
									"src": "1465:3:7",
									"type": ""
								}
							],
							"src": "1378:1352:7"
						}
					]
				},
				"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
				"id": 7,
				"language": "Yul",
				"name": "#utility.yul"
			}
		],
		"linkReferences": {},
		"object": "",
		"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD PUSH17 0x23B932B2B729B0BA37B9B434AA37B5B2B7 PUSH1 0x79 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x11D4D5 PUSH1 0xEA SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x68 SWAP2 SWAP1 PUSH3 0x18F JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x77 DUP3 DUP3 PUSH3 0x18F JUMP JUMPDEST POP POP POP PUSH3 0x94 PUSH3 0x8E PUSH3 0x9A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x9E JUMP JUMPDEST PUSH3 0x257 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x118 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x137 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x18A JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x165 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x186 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x171 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x1AB JUMPI PUSH3 0x1AB PUSH3 0xEF JUMP JUMPDEST PUSH3 0x1C3 DUP2 PUSH3 0x1BC DUP5 SLOAD PUSH3 0x103 JUMP JUMPDEST DUP5 PUSH3 0x13D JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x1F9 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x1E1 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x186 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x229 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x208 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x247 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xD74 DUP1 PUSH3 0x265 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x106 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x9E JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x27E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1FD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x15D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x112 PUSH2 0x291 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11F SWAP2 SWAP1 PUSH2 0xB68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH2 0x136 CALLDATASIZE PUSH1 0x4 PUSH2 0xBCE JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11F JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11F JUMP JUMPDEST PUSH2 0x13B PUSH2 0x16B CALLDATASIZE PUSH1 0x4 PUSH2 0xBF6 JUMP JUMPDEST PUSH2 0x33A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11F JUMP JUMPDEST PUSH2 0x13B PUSH2 0x18D CALLDATASIZE PUSH1 0x4 PUSH2 0xBCE JUMP JUMPDEST PUSH2 0x35D JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0xBCE JUMP JUMPDEST PUSH2 0x39B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A5 PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0xC2F JUMP JUMPDEST PUSH2 0x3DC JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0xC46 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x3E9 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0xBCE JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11F JUMP JUMPDEST PUSH2 0x112 PUSH2 0x433 JUMP JUMPDEST PUSH2 0x13B PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0xBCE JUMP JUMPDEST PUSH2 0x442 JUMP JUMPDEST PUSH2 0x13B PUSH2 0x241 CALLDATASIZE PUSH1 0x4 PUSH2 0xBCE JUMP JUMPDEST PUSH2 0x4D3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0xC66 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0xC46 JUMP JUMPDEST PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2A0 SWAP1 PUSH2 0xC97 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2CC SWAP1 PUSH2 0xC97 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x317 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2EE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x317 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2FA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x32E DUP2 DUP6 DUP6 PUSH2 0x578 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x347 DUP6 DUP3 DUP6 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x352 DUP6 DUP6 DUP6 PUSH2 0x72C JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x32E SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x396 SWAP1 DUP8 SWAP1 PUSH2 0xCE3 JUMP JUMPDEST PUSH2 0x578 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C5 SWAP1 PUSH2 0xCF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3D8 DUP3 DUP3 PUSH2 0x8F8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3E6 CALLER DUP3 PUSH2 0x9D4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x413 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C5 SWAP1 PUSH2 0xCF6 JUMP JUMPDEST PUSH2 0x41C PUSH0 PUSH2 0xB17 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x429 DUP3 CALLER DUP4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x3D8 DUP3 DUP3 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2A0 SWAP1 PUSH2 0xC97 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x4C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C5 JUMP JUMPDEST PUSH2 0x352 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x578 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x32E DUP2 DUP6 DUP6 PUSH2 0x72C JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x50A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C5 SWAP1 PUSH2 0xCF6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x56F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C5 JUMP JUMPDEST PUSH2 0x3E6 DUP2 PUSH2 0xB17 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x63B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x726 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x719 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C5 JUMP JUMPDEST PUSH2 0x726 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x578 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x790 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x869 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x89F SWAP1 DUP5 SWAP1 PUSH2 0xCE3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x8EB SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x726 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x94E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C5 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x95F SWAP2 SWAP1 PUSH2 0xCE3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x98B SWAP1 DUP5 SWAP1 PUSH2 0xCE3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xAA7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xAD5 SWAP1 DUP5 SWAP1 PUSH2 0xD2B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x68F JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB93 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xB77 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBC9 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBE8 DUP4 PUSH2 0xBB3 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC08 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC11 DUP5 PUSH2 0xBB3 JUMP JUMPDEST SWAP3 POP PUSH2 0xC1F PUSH1 0x20 DUP6 ADD PUSH2 0xBB3 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC3F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC56 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC5F DUP3 PUSH2 0xBB3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC77 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC80 DUP4 PUSH2 0xBB3 JUMP JUMPDEST SWAP2 POP PUSH2 0xC8E PUSH1 0x20 DUP5 ADD PUSH2 0xBB3 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xCAB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xCC9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x334 JUMPI PUSH2 0x334 PUSH2 0xCCF JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x334 JUMPI PUSH2 0x334 PUSH2 0xCCF JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 LOG3 DUP15 0xB1 0xC1 CHAINID PUSH22 0x1C9C957EB2DBE14DE37CE552422B8DFBF3FCDECA5623 0x2D 0xE6 DUP14 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
		"sourceMap": "1465:313:3:-:0;;;1531:50;;;;;;;;;;3205:113:1;;;;;;;;;;;;;-1:-1:-1;;;3205:113:1;;;;;;;;;;;;;;;;-1:-1:-1;;;3205:113:1;;;3279:5;3271;:13;;;;;;:::i;:::-;-1:-1:-1;3294:7:1;:17;3304:7;3294;:17;:::i;:::-;;3205:113;;2162:32:6;2181:12;:10;;;:12;;:::i;:::-;2162:18;:32::i;:::-;1465:313:3;;1888:96:0;1967:10;;1888:96::o;3511:187:6:-;3603:6;;;-1:-1:-1;;;;;3619:17:6;;;-1:-1:-1;;;;;;3619:17:6;;;;;;;3651:40;;3603:6;;;3619:17;3603:6;;3651:40;;3584:16;;3651:40;3574:124;3511:187;:::o;14:127:7:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:7;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:7;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:7;;;2580:26;2531:89;-1:-1:-1;;1335:1:7;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:7;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:7;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:7;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:7:o;:::-;1465:313:3;;;;;;"
	},
	"abi": [
		{
			"inputs": [],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "owner",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "spender",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "value",
					"type": "uint256"
				}
			],
			"name": "Approval",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "previousOwner",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "newOwner",
					"type": "address"
				}
			],
			"name": "OwnershipTransferred",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "from",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "to",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "value",
					"type": "uint256"
				}
			],
			"name": "Transfer",
			"type": "event"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "owner",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "spender",
					"type": "address"
				}
			],
			"name": "allowance",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "spender",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "approve",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "account",
					"type": "address"
				}
			],
			"name": "balanceOf",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "burn",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "account",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "burnFrom",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "decimals",
			"outputs": [
				{
					"internalType": "uint8",
					"name": "",
					"type": "uint8"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "spender",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "subtractedValue",
					"type": "uint256"
				}
			],
			"name": "decreaseAllowance",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "spender",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "addedValue",
					"type": "uint256"
				}
			],
			"name": "increaseAllowance",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "to",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "mint",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "name",
			"outputs": [
				{
					"internalType": "string",
					"name": "",
					"type": "string"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "owner",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "renounceOwnership",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "symbol",
			"outputs": [
				{
					"internalType": "string",
					"name": "",
					"type": "string"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "totalSupply",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "to",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "transfer",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "from",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "to",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "transferFrom",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "newOwner",
					"type": "address"
				}
			],
			"name": "transferOwnership",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	],
	"storageLayout": {
		"storage": [
			{
				"astId": 37,
				"contract": "gist-c3c4eca9058578e810c73480a4308aee/GreenSatoshiToken.sol:GreenSatoshiToken",
				"label": "_balances",
				"offset": 0,
				"slot": "0",
				"type": "t_mapping(t_address,t_uint256)"
			},
			{
				"astId": 43,
				"contract": "gist-c3c4eca9058578e810c73480a4308aee/GreenSatoshiToken.sol:GreenSatoshiToken",
				"label": "_allowances",
				"offset": 0,
				"slot": "1",
				"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
			},
			{
				"astId": 45,
				"contract": "gist-c3c4eca9058578e810c73480a4308aee/GreenSatoshiToken.sol:GreenSatoshiToken",
				"label": "_totalSupply",
				"offset": 0,
				"slot": "2",
				"type": "t_uint256"
			},
			{
				"astId": 47,
				"contract": "gist-c3c4eca9058578e810c73480a4308aee/GreenSatoshiToken.sol:GreenSatoshiToken",
				"label": "_name",
				"offset": 0,
				"slot": "3",
				"type": "t_string_storage"
			},
			{
				"astId": 49,
				"contract": "gist-c3c4eca9058578e810c73480a4308aee/GreenSatoshiToken.sol:GreenSatoshiToken",
				"label": "_symbol",
				"offset": 0,
				"slot": "4",
				"type": "t_string_storage"
			},
			{
				"astId": 809,
				"contract": "gist-c3c4eca9058578e810c73480a4308aee/GreenSatoshiToken.sol:GreenSatoshiToken",
				"label": "_owner",
				"offset": 0,
				"slot": "5",
				"type": "t_address"
			}
		],
		"types": {
			"t_address": {
				"encoding": "inplace",
				"label": "address",
				"numberOfBytes": "20"
			},
			"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
				"encoding": "mapping",
				"key": "t_address",
				"label": "mapping(address => mapping(address => uint256))",
				"numberOfBytes": "32",
				"value": "t_mapping(t_address,t_uint256)"
			},
			"t_mapping(t_address,t_uint256)": {
				"encoding": "mapping",
				"key": "t_address",
				"label": "mapping(address => uint256)",
				"numberOfBytes": "32",
				"value": "t_uint256"
			},
			"t_string_storage": {
				"encoding": "bytes",
				"label": "string",
				"numberOfBytes": "32"
			},
			"t_uint256": {
				"encoding": "inplace",
				"label": "uint256",
				"numberOfBytes": "32"
			}
		}
	},
	"web3Deploy": "var greensatoshitokenContract = new web3.eth.Contract([{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]);\nvar greensatoshitoken = greensatoshitokenContract.deploy({\n     data: '', \n     arguments: [\n     ]\n}).send({\n     from: web3.eth.accounts[0], \n     gas: '4700000'\n   }, function (e, contract){\n    console.log(e, contract);\n    if (typeof contract.address !== 'undefined') {\n         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);\n    }\n })",
	"functionHashes": {
		"39509351": "increaseAllowance(address,uint256)",
		"dd62ed3e": "allowance(address,address)",
		"095ea7b3": "approve(address,uint256)",
		"70a08231": "balanceOf(address)",
		"42966c68": "burn(uint256)",
		"79cc6790": "burnFrom(address,uint256)",
		"313ce567": "decimals()",
		"a457c2d7": "decreaseAllowance(address,uint256)",
		"40c10f19": "mint(address,uint256)",
		"06fdde03": "name()",
		"8da5cb5b": "owner()",
		"715018a6": "renounceOwnership()",
		"95d89b41": "symbol()",
		"18160ddd": "totalSupply()",
		"a9059cbb": "transfer(address,uint256)",
		"23b872dd": "transferFrom(address,address,uint256)",
		"f2fde38b": "transferOwnership(address)"
	},
	"gasEstimates": {
		"Creation": {
			"codeDepositCost": "688800",
			"executionCost": "infinite",
			"totalCost": "infinite"
		},
		"External": {
			"allowance(address,address)": "infinite",
			"approve(address,uint256)": "24648",
			"balanceOf(address)": "2560",
			"burn(uint256)": "50953",
			"burnFrom(address,uint256)": "infinite",
			"decimals()": "199",
			"decreaseAllowance(address,uint256)": "26941",
			"increaseAllowance(address,uint256)": "infinite",
			"mint(address,uint256)": "infinite",
			"name()": "infinite",
			"owner()": "2389",
			"renounceOwnership()": "28159",
			"symbol()": "infinite",
			"totalSupply()": "2348",
			"transfer(address,uint256)": "infinite",
			"transferFrom(address,address,uint256)": "infinite",
			"transferOwnership(address)": "28419"
		}
	},
	"devdoc": {
		"author": "STEPN",
		"events": {
			"Approval(address,address,uint256)": {
				"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
			},
			"Transfer(address,address,uint256)": {
				"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
			}
		},
		"kind": "dev",
		"methods": {
			"allowance(address,address)": {
				"details": "See {IERC20-allowance}."
			},
			"approve(address,uint256)": {
				"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
			},
			"balanceOf(address)": {
				"details": "See {IERC20-balanceOf}."
			},
			"burn(uint256)": {
				"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
			},
			"burnFrom(address,uint256)": {
				"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
			},
			"decimals()": {
				"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
			},
			"decreaseAllowance(address,uint256)": {
				"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
			},
			"increaseAllowance(address,uint256)": {
				"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
			},
			"name()": {
				"details": "Returns the name of the token."
			},
			"owner()": {
				"details": "Returns the address of the current owner."
			},
			"renounceOwnership()": {
				"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
			},
			"symbol()": {
				"details": "Returns the symbol of the token, usually a shorter version of the name."
			},
			"totalSupply()": {
				"details": "See {IERC20-totalSupply}."
			},
			"transfer(address,uint256)": {
				"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
			},
			"transferFrom(address,address,uint256)": {
				"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
			},
			"transferOwnership(address)": {
				"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
			}
		},
		"version": 1
	},
	"userdoc": {
		"kind": "user",
		"methods": {},
		"notice": "Green Satoshi Token",
		"version": 1
	},
	"Runtime Bytecode": {
		"functionDebugData": {
			"@_afterTokenTransfer_608": {
				"entryPoint": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"id": 608,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"@_approve_543": {
				"entryPoint": 1400,
				"id": 543,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"@_beforeTokenTransfer_597": {
				"entryPoint": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"id": 597,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"@_burn_498": {
				"entryPoint": 2516,
				"id": 498,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@_mint_426": {
				"entryPoint": 2296,
				"id": 426,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@_msgSender_11": {
				"entryPoint": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"id": 11,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@_spendAllowance_586": {
				"entryPoint": 1692,
				"id": 586,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"@_transferOwnership_905": {
				"entryPoint": 2839,
				"id": 905,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@_transfer_370": {
				"entryPoint": 1836,
				"id": 370,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"@allowance_163": {
				"entryPoint": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"id": 163,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"@approve_188": {
				"entryPoint": 801,
				"id": 188,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"@balanceOf_120": {
				"entryPoint": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"id": 120,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@burnFrom_652": {
				"entryPoint": 1054,
				"id": 652,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@burn_631": {
				"entryPoint": 988,
				"id": 631,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@decimals_697": {
				"entryPoint": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"id": 697,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@decreaseAllowance_293": {
				"entryPoint": 1090,
				"id": 293,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"@increaseAllowance_251": {
				"entryPoint": 861,
				"id": 251,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"@mint_688": {
				"entryPoint": 923,
				"id": 688,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@name_76": {
				"entryPoint": 657,
				"id": 76,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@owner_834": {
				"entryPoint": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"id": 834,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@renounceOwnership_862": {
				"entryPoint": 1001,
				"id": 862,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@symbol_86": {
				"entryPoint": 1075,
				"id": 86,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@totalSupply_106": {
				"entryPoint": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"id": 106,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@transferFrom_221": {
				"entryPoint": 826,
				"id": 221,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"@transferOwnership_885": {
				"entryPoint": 1248,
				"id": 885,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@transfer_145": {
				"entryPoint": 1235,
				"id": 145,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_address": {
				"entryPoint": 2995,
				"id": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_address": {
				"entryPoint": 3142,
				"id": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_addresst_address": {
				"entryPoint": 3174,
				"id": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"parameterSlots": 2,
				"returnSlots": 2
			},
			"abi_decode_tuple_t_addresst_addresst_uint256": {
				"entryPoint": 3062,
				"id": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"parameterSlots": 2,
				"returnSlots": 3
			},
			"abi_decode_tuple_t_addresst_uint256": {
				"entryPoint": 3022,
				"id": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"parameterSlots": 2,
				"returnSlots": 2
			},
			"abi_decode_tuple_t_uint256": {
				"entryPoint": 3119,
				"id": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
				"entryPoint": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"id": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
				"entryPoint": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"id": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 2920,
				"id": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"id": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"id": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"id": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"id": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"id": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"id": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 3318,
				"id": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"id": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"id": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"id": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"id": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"id": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
				"entryPoint": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"id": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
				"entryPoint": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"id": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"checked_add_t_uint256": {
				"entryPoint": 3299,
				"id": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"checked_sub_t_uint256": {
				"entryPoint": 3371,
				"id": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"extract_byte_array_length": {
				"entryPoint": 3223,
				"id": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"panic_error_0x11": {
				"entryPoint": 3279,
				"id": export const shouldRevalidate: ShouldRevalidateFunction = () => {
,
				"parameterSlots": 0,
				"returnSlots": 0
			}
		},
		"generatedSources": [
			{
				"ast": {
					"nodeType": "YulBlock",
					"src": "0:8248:7",
					"statements": [
						{
							"nodeType": "YulBlock",
							"src": "6:3:7",
							"statements": []
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "135:427:7",
								"statements": [
									{
										"nodeType": "YulVariableDeclaration",
										"src": "145:12:7",
										"value": {
											"kind": "number",
											"nodeType": "YulLiteral",
											"src": "155:2:7",
											"type": "",
											"value": "32"
										},
										"variables": [
											{
												"name": "_1",
												"nodeType": "YulTypedName",
												"src": "149:2:7",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "173:9:7"
												},
												{
													"name": "_1",
													"nodeType": "YulIdentifier",
													"src": "184:2:7"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "166:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "166:21:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "166:21:7"
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "196:27:7",
										"value": {
											"arguments": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "216:6:7"
												}
											],
											"functionName": {
												"name": "mload",
												"nodeType": "YulIdentifier",
												"src": "210:5:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "210:13:7"
										},
										"variables": [
											{
												"name": "length",
												"nodeType": "YulTypedName",
												"src": "200:6:7",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "243:9:7"
														},
														{
															"name": "_1",
															"nodeType": "YulIdentifier",
															"src": "254:2:7"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "239:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "239:18:7"
												},
												{
													"name": "length",
													"nodeType": "YulIdentifier",
													"src": "259:6:7"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "232:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "232:34:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "232:34:7"
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "275:10:7",
										"value": {
											"kind": "number",
											"nodeType": "YulLiteral",
											"src": "284:1:7",
											"type": "",
											"value": "0"
										},
										"variables": [
											{
												"name": "i",
												"nodeType": "YulTypedName",
												"src": "279:1:7",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "344:90:7",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "373:9:7"
																			},
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "384:1:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "369:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "369:17:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "388:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "365:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "365:26:7"
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "407:6:7"
																					},
																					{
																						"name": "i",
																						"nodeType": "YulIdentifier",
																						"src": "415:1:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "403:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "403:14:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "419:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "399:23:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "393:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "393:30:7"
															}
														],
														"functionName": {
															"name": "mstore",
															"nodeType": "YulIdentifier",
															"src": "358:6:7"
														},
														"nodeType": "YulFunctionCall",
														"src": "358:66:7"
													},
													"nodeType": "YulExpressionStatement",
													"src": "358:66:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "i",
													"nodeType": "YulIdentifier",
													"src": "305:1:7"
												},
												{
													"name": "length",
													"nodeType": "YulIdentifier",
													"src": "308:6:7"
												}
											],
											"functionName": {
												"name": "lt",
												"nodeType": "YulIdentifier",
												"src": "302:2:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "302:13:7"
										},
										"nodeType": "YulForLoop",
										"post": {
											"nodeType": "YulBlock",
											"src": "316:19:7",
											"statements": [
												{
													"nodeType": "YulAssignment",
													"src": "318:15:7",
													"value": {
														"arguments": [
															{
																"name": "i",
																"nodeType": "YulIdentifier",
																"src": "327:1:7"
															},
															{
																"name": "_1",
																"nodeType": "YulIdentifier",
																"src": "330:2:7"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "323:3:7"
														},
														"nodeType": "YulFunctionCall",
														"src": "323:10:7"
													},
													"variableNames": [
														{
															"name": "i",
															"nodeType": "YulIdentifier",
															"src": "318:1:7"
														}
													]
												}
											]
										},
										"pre": {
											"nodeType": "YulBlock",
											"src": "298:3:7",
											"statements": []
										},
										"src": "294:140:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nodeType": "YulIdentifier",
																	"src": "458:9:7"
																},
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "469:6:7"
																}
															],
															"functionName": {
																"name": "add",
																"nodeType": "YulIdentifier",
																"src": "454:3:7"
															},
															"nodeType": "YulFunctionCall",
															"src": "454:22:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "478:2:7",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "450:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "450:31:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "483:1:7",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "443:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "443:42:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "443:42:7"
									},
									{
										"nodeType": "YulAssignment",
										"src": "494:62:7",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "510:9:7"
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"name": "length",
																			"nodeType": "YulIdentifier",
																			"src": "529:6:7"
																		},
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "537:2:7",
																			"type": "",
																			"value": "31"
																		}
																	],
																	"functionName": {
																		"name": "add",
																		"nodeType": "YulIdentifier",
																		"src": "525:3:7"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "525:15:7"
																},
																{
																	"arguments": [
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "546:2:7",
																			"type": "",
																			"value": "31"
																		}
																	],
																	"functionName": {
																		"name": "not",
																		"nodeType": "YulIdentifier",
																		"src": "542:3:7"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "542:7:7"
																}
															],
															"functionName": {
																"name": "and",
																"nodeType": "YulIdentifier",
																"src": "521:3:7"
															},
															"nodeType": "YulFunctionCall",
															"src": "521:29:7"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "506:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "506:45:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "553:2:7",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "502:3:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "502:54:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "494:4:7"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "104:9:7",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "115:6:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "126:4:7",
									"type": ""
								}
							],
							"src": "14:548:7"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "616:124:7",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "626:29:7",
										"value": {
											"arguments": [
												{
													"name": "offset",
													"nodeType": "YulIdentifier",
													"src": "648:6:7"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nodeType": "YulIdentifier",
												"src": "635:12:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "635:20:7"
										},
										"variableNames": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "626:5:7"
											}
										]
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "718:16:7",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "727:1:7",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "730:1:7",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "720:6:7"
														},
														"nodeType": "YulFunctionCall",
														"src": "720:12:7"
													},
													"nodeType": "YulExpressionStatement",
													"src": "720:12:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nodeType": "YulIdentifier",
															"src": "677:5:7"
														},
														{
															"arguments": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "688:5:7"
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "703:3:7",
																					"type": "",
																					"value": "160"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "708:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "shl",
																				"nodeType": "YulIdentifier",
																				"src": "699:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "699:11:7"
																		},
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "712:1:7",
																			"type": "",
																			"value": "1"
																		}
																	],
																	"functionName": {
																		"name": "sub",
																		"nodeType": "YulIdentifier",
																		"src": "695:3:7"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "695:19:7"
																}
															],
															"functionName": {
																"name": "and",
																"nodeType": "YulIdentifier",
																"src": "684:3:7"
															},
															"nodeType": "YulFunctionCall",
															"src": "684:31:7"
														}
													],
													"functionName": {
														"name": "eq",
														"nodeType": "YulIdentifier",
														"src": "674:2:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "674:42:7"
												}
											],
											"functionName": {
												"name": "iszero",
												"nodeType": "YulIdentifier",
												"src": "667:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "667:50:7"
										},
										"nodeType": "YulIf",
										"src": "664:70:7"
									}
								]
							},
							"name": "abi_decode_address",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "offset",
									"nodeType": "YulTypedName",
									"src": "595:6:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value",
									"nodeType": "YulTypedName",
									"src": "606:5:7",
									"type": ""
								}
							],
							"src": "567:173:7"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "832:167:7",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "878:16:7",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "887:1:7",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "890:1:7",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "880:6:7"
														},
														"nodeType": "YulFunctionCall",
														"src": "880:12:7"
													},
													"nodeType": "YulExpressionStatement",
													"src": "880:12:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "853:7:7"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "862:9:7"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "849:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "849:23:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "874:2:7",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "slt",
												"nodeType": "YulIdentifier",
												"src": "845:3:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "845:32:7"
										},
										"nodeType": "YulIf",
										"src": "842:52:7"
									},
									{
										"nodeType": "YulAssignment",
										"src": "903:39:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "932:9:7"
												}
											],
											"functionName": {
												"name": "abi_decode_address",
												"nodeType": "YulIdentifier",
												"src": "913:18:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "913:29:7"
										},
										"variableNames": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "903:6:7"
											}
										]
									},
									{
										"nodeType": "YulAssignment",
										"src": "951:42:7",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "978:9:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "989:2:7",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "974:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "974:18:7"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nodeType": "YulIdentifier",
												"src": "961:12:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "961:32:7"
										},
										"variableNames": [
											{
												"name": "value1",
												"nodeType": "YulIdentifier",
												"src": "951:6:7"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_addresst_uint256",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "790:9:7",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nodeType": "YulTypedName",
									"src": "801:7:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "813:6:7",
									"type": ""
								},
								{
									"name": "value1",
									"nodeType": "YulTypedName",
									"src": "821:6:7",
									"type": ""
								}
							],
							"src": "745:254:7"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "1099:92:7",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "1109:26:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "1121:9:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "1132:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "1117:3:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "1117:18:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "1109:4:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "1151:9:7"
												},
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1176:6:7"
																}
															],
															"functionName": {
																"name": "iszero",
																"nodeType": "YulIdentifier",
																"src": "1169:6:7"
															},
															"nodeType": "YulFunctionCall",
															"src": "1169:14:7"
														}
													],
													"functionName": {
														"name": "iszero",
														"nodeType": "YulIdentifier",
														"src": "1162:6:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "1162:22:7"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "1144:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "1144:41:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "1144:41:7"
									}
								]
							},
							"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "1068:9:7",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "1079:6:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "1090:4:7",
									"type": ""
								}
							],
							"src": "1004:187:7"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "1297:76:7",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "1307:26:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "1319:9:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "1330:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "1315:3:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "1315:18:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "1307:4:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "1349:9:7"
												},
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "1360:6:7"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "1342:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "1342:25:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "1342:25:7"
									}
								]
							},
							"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "1266:9:7",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "1277:6:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "1288:4:7",
									"type": ""
								}
							],
							"src": "1196:177:7"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "1482:224:7",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "1528:16:7",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1537:1:7",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1540:1:7",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "1530:6:7"
														},
														"nodeType": "YulFunctionCall",
														"src": "1530:12:7"
													},
													"nodeType": "YulExpressionStatement",
													"src": "1530:12:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "1503:7:7"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "1512:9:7"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "1499:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "1499:23:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "1524:2:7",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "slt",
												"nodeType": "YulIdentifier",
												"src": "1495:3:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "1495:32:7"
										},
										"nodeType": "YulIf",
										"src": "1492:52:7"
									},
									{
										"nodeType": "YulAssignment",
										"src": "1553:39:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "1582:9:7"
												}
											],
											"functionName": {
												"name": "abi_decode_address",
												"nodeType": "YulIdentifier",
												"src": "1563:18:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "1563:29:7"
										},
										"variableNames": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "1553:6:7"
											}
										]
									},
									{
										"nodeType": "YulAssignment",
										"src": "1601:48:7",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "1634:9:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1645:2:7",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "1630:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "1630:18:7"
												}
											],
											"functionName": {
												"name": "abi_decode_address",
												"nodeType": "YulIdentifier",
												"src": "1611:18:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "1611:38:7"
										},
										"variableNames": [
											{
												"name": "value1",
												"nodeType": "YulIdentifier",
												"src": "1601:6:7"
											}
										]
									},
									{
										"nodeType": "YulAssignment",
										"src": "1658:42:7",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "1685:9:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1696:2:7",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "1681:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "1681:18:7"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nodeType": "YulIdentifier",
												"src": "1668:12:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "1668:32:7"
										},
										"variableNames": [
											{
												"name": "value2",
												"nodeType": "YulIdentifier",
												"src": "1658:6:7"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_addresst_addresst_uint256",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "1432:9:7",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nodeType": "YulTypedName",
									"src": "1443:7:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "1455:6:7",
									"type": ""
								},
								{
									"name": "value1",
									"nodeType": "YulTypedName",
									"src": "1463:6:7",
									"type": ""
								},
								{
									"name": "value2",
									"nodeType": "YulTypedName",
									"src": "1471:6:7",
									"type": ""
								}
							],
							"src": "1378:328:7"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "1808:87:7",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "1818:26:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "1830:9:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "1841:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "1826:3:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "1826:18:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "1818:4:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "1860:9:7"
												},
												{
													"arguments": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "1875:6:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1883:4:7",
															"type": "",
															"value": "0xff"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "1871:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "1871:17:7"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "1853:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "1853:36:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "1853:36:7"
									}
								]
							},
							"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "1777:9:7",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "1788:6:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "1799:4:7",
									"type": ""
								}
							],
							"src": "1711:184:7"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "1970:110:7",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "2016:16:7",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2025:1:7",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2028:1:7",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "2018:6:7"
														},
														"nodeType": "YulFunctionCall",
														"src": "2018:12:7"
													},
													"nodeType": "YulExpressionStatement",
													"src": "2018:12:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "1991:7:7"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "2000:9:7"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "1987:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "1987:23:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "2012:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nodeType": "YulIdentifier",
												"src": "1983:3:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "1983:32:7"
										},
										"nodeType": "YulIf",
										"src": "1980:52:7"
									},
									{
										"nodeType": "YulAssignment",
										"src": "2041:33:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "2064:9:7"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nodeType": "YulIdentifier",
												"src": "2051:12:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "2051:23:7"
										},
										"variableNames": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "2041:6:7"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_uint256",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "1936:9:7",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nodeType": "YulTypedName",
									"src": "1947:7:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "1959:6:7",
									"type": ""
								}
							],
							"src": "1900:180:7"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "2155:116:7",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "2201:16:7",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2210:1:7",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2213:1:7",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "2203:6:7"
														},
														"nodeType": "YulFunctionCall",
														"src": "2203:12:7"
													},
													"nodeType": "YulExpressionStatement",
													"src": "2203:12:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "2176:7:7"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "2185:9:7"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "2172:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "2172:23:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "2197:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nodeType": "YulIdentifier",
												"src": "2168:3:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "2168:32:7"
										},
										"nodeType": "YulIf",
										"src": "2165:52:7"
									},
									{
										"nodeType": "YulAssignment",
										"src": "2226:39:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "2255:9:7"
												}
											],
											"functionName": {
												"name": "abi_decode_address",
												"nodeType": "YulIdentifier",
												"src": "2236:18:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "2236:29:7"
										},
										"variableNames": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "2226:6:7"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_address",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "2121:9:7",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nodeType": "YulTypedName",
									"src": "2132:7:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "2144:6:7",
									"type": ""
								}
							],
							"src": "2085:186:7"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "2377:102:7",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "2387:26:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "2399:9:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "2410:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "2395:3:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "2395:18:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "2387:4:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "2429:9:7"
												},
												{
													"arguments": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "2444:6:7"
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2460:3:7",
																			"type": "",
																			"value": "160"
																		},
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2465:1:7",
																			"type": "",
																			"value": "1"
																		}
																	],
																	"functionName": {
																		"name": "shl",
																		"nodeType": "YulIdentifier",
																		"src": "2456:3:7"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "2456:11:7"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "2469:1:7",
																	"type": "",
																	"value": "1"
																}
															],
															"functionName": {
																"name": "sub",
																"nodeType": "YulIdentifier",
																"src": "2452:3:7"
															},
															"nodeType": "YulFunctionCall",
															"src": "2452:19:7"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "2440:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "2440:32:7"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "2422:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "2422:51:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "2422:51:7"
									}
								]
							},
							"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "2346:9:7",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "2357:6:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "2368:4:7",
									"type": ""
								}
							],
							"src": "2276:203:7"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "2571:173:7",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "2617:16:7",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2626:1:7",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2629:1:7",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "2619:6:7"
														},
														"nodeType": "YulFunctionCall",
														"src": "2619:12:7"
													},
													"nodeType": "YulExpressionStatement",
													"src": "2619:12:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "2592:7:7"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "2601:9:7"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "2588:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "2588:23:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "2613:2:7",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "slt",
												"nodeType": "YulIdentifier",
												"src": "2584:3:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "2584:32:7"
										},
										"nodeType": "YulIf",
										"src": "2581:52:7"
									},
									{
										"nodeType": "YulAssignment",
										"src": "2642:39:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "2671:9:7"
												}
											],
											"functionName": {
												"name": "abi_decode_address",
												"nodeType": "YulIdentifier",
												"src": "2652:18:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "2652:29:7"
										},
										"variableNames": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "2642:6:7"
											}
										]
									},
									{
										"nodeType": "YulAssignment",
										"src": "2690:48:7",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "2723:9:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2734:2:7",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "2719:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "2719:18:7"
												}
											],
											"functionName": {
												"name": "abi_decode_address",
												"nodeType": "YulIdentifier",
												"src": "2700:18:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "2700:38:7"
										},
										"variableNames": [
											{
												"name": "value1",
												"nodeType": "YulIdentifier",
												"src": "2690:6:7"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_addresst_address",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "2529:9:7",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nodeType": "YulTypedName",
									"src": "2540:7:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "2552:6:7",
									"type": ""
								},
								{
									"name": "value1",
									"nodeType": "YulTypedName",
									"src": "2560:6:7",
									"type": ""
								}
							],
							"src": "2484:260:7"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "2804:325:7",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "2814:22:7",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "2828:1:7",
													"type": "",
													"value": "1"
												},
												{
													"name": "data",
													"nodeType": "YulIdentifier",
													"src": "2831:4:7"
												}
											],
											"functionName": {
												"name": "shr",
												"nodeType": "YulIdentifier",
												"src": "2824:3:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "2824:12:7"
										},
										"variableNames": [
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "2814:6:7"
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "2845:38:7",
										"value": {
											"arguments": [
												{
													"name": "data",
													"nodeType": "YulIdentifier",
													"src": "2875:4:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "2881:1:7",
													"type": "",
													"value": "1"
												}
											],
											"functionName": {
												"name": "and",
												"nodeType": "YulIdentifier",
												"src": "2871:3:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "2871:12:7"
										},
										"variables": [
											{
												"name": "outOfPlaceEncoding",
												"nodeType": "YulTypedName",
												"src": "2849:18:7",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "2922:31:7",
											"statements": [
												{
													"nodeType": "YulAssignment",
													"src": "2924:27:7",
													"value": {
														"arguments": [
															{
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "2938:6:7"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2946:4:7",
																"type": "",
																"value": "0x7f"
															}
														],
														"functionName": {
															"name": "and",
															"nodeType": "YulIdentifier",
															"src": "2934:3:7"
														},
														"nodeType": "YulFunctionCall",
														"src": "2934:17:7"
													},
													"variableNames": [
														{
															"name": "length",
															"nodeType": "YulIdentifier",
															"src": "2924:6:7"
														}
													]
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "outOfPlaceEncoding",
													"nodeType": "YulIdentifier",
													"src": "2902:18:7"
												}
											],
											"functionName": {
												"name": "iszero",
												"nodeType": "YulIdentifier",
												"src": "2895:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "2895:26:7"
										},
										"nodeType": "YulIf",
										"src": "2892:61:7"
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "3012:111:7",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3033:1:7",
																"type": "",
																"value": "0"
															},
															{
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3040:3:7",
																		"type": "",
																		"value": "224"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3045:10:7",
																		"type": "",
																		"value": "0x4e487b71"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "3036:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3036:20:7"
															}
														],
														"functionName": {
															"name": "mstore",
															"nodeType": "YulIdentifier",
															"src": "3026:6:7"
														},
														"nodeType": "YulFunctionCall",
														"src": "3026:31:7"
													},
													"nodeType": "YulExpressionStatement",
													"src": "3026:31:7"
												},
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3077:1:7",
																"type": "",
																"value": "4"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3080:4:7",
																"type": "",
																"value": "0x22"
															}
														],
														"functionName": {
															"name": "mstore",
															"nodeType": "YulIdentifier",
															"src": "3070:6:7"
														},
														"nodeType": "YulFunctionCall",
														"src": "3070:15:7"
													},
													"nodeType": "YulExpressionStatement",
													"src": "3070:15:7"
												},
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3105:1:7",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3108:4:7",
																"type": "",
																"value": "0x24"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "3098:6:7"
														},
														"nodeType": "YulFunctionCall",
														"src": "3098:15:7"
													},
													"nodeType": "YulExpressionStatement",
													"src": "3098:15:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "outOfPlaceEncoding",
													"nodeType": "YulIdentifier",
													"src": "2968:18:7"
												},
												{
													"arguments": [
														{
															"name": "length",
															"nodeType": "YulIdentifier",
															"src": "2991:6:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2999:2:7",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "lt",
														"nodeType": "YulIdentifier",
														"src": "2988:2:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "2988:14:7"
												}
											],
											"functionName": {
												"name": "eq",
												"nodeType": "YulIdentifier",
												"src": "2965:2:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "2965:38:7"
										},
										"nodeType": "YulIf",
										"src": "2962:161:7"
									}
								]
							},
							"name": "extract_byte_array_length",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "data",
									"nodeType": "YulTypedName",
									"src": "2784:4:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "length",
									"nodeType": "YulTypedName",
									"src": "2793:6:7",
									"type": ""
								}
							],
							"src": "2749:380:7"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "3166:95:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "3183:1:7",
													"type": "",
													"value": "0"
												},
												{
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "3190:3:7",
															"type": "",
															"value": "224"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "3195:10:7",
															"type": "",
															"value": "0x4e487b71"
														}
													],
													"functionName": {
														"name": "shl",
														"nodeType": "YulIdentifier",
														"src": "3186:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "3186:20:7"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "3176:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "3176:31:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "3176:31:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "3223:1:7",
													"type": "",
													"value": "4"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "3226:4:7",
													"type": "",
													"value": "0x11"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "3216:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "3216:15:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "3216:15:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "3247:1:7",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "3250:4:7",
													"type": "",
													"value": "0x24"
												}
											],
											"functionName": {
												"name": "revert",
												"nodeType": "YulIdentifier",
												"src": "3240:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "3240:15:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "3240:15:7"
									}
								]
							},
							"name": "panic_error_0x11",
							"nodeType": "YulFunctionDefinition",
							"src": "3134:127:7"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "3314:77:7",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "3324:16:7",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "3335:1:7"
												},
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "3338:1:7"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "3331:3:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "3331:9:7"
										},
										"variableNames": [
											{
												"name": "sum",
												"nodeType": "YulIdentifier",
												"src": "3324:3:7"
											}
										]
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "3363:22:7",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x11",
															"nodeType": "YulIdentifier",
															"src": "3365:16:7"
														},
														"nodeType": "YulFunctionCall",
														"src": "3365:18:7"
													},
													"nodeType": "YulExpressionStatement",
													"src": "3365:18:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "3355:1:7"
												},
												{
													"name": "sum",
													"nodeType": "YulIdentifier",
													"src": "3358:3:7"
												}
											],
											"functionName": {
												"name": "gt",
												"nodeType": "YulIdentifier",
												"src": "3352:2:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "3352:10:7"
										},
										"nodeType": "YulIf",
										"src": "3349:36:7"
									}
								]
							},
							"name": "checked_add_t_uint256",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "x",
									"nodeType": "YulTypedName",
									"src": "3297:1:7",
									"type": ""
								},
								{
									"name": "y",
									"nodeType": "YulTypedName",
									"src": "3300:1:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "sum",
									"nodeType": "YulTypedName",
									"src": "3306:3:7",
									"type": ""
								}
							],
							"src": "3266:125:7"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "3570:182:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "3587:9:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "3598:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "3580:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "3580:21:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "3580:21:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "3621:9:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "3632:2:7",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "3617:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "3617:18:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "3637:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "3610:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "3610:30:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "3610:30:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "3660:9:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "3671:2:7",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "3656:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "3656:18:7"
												},
												{
													"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "3676:34:7",
													"type": "",
													"value": "Ownable: caller is not the owner"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "3649:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "3649:62:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "3649:62:7"
									},
									{
										"nodeType": "YulAssignment",
										"src": "3720:26:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "3732:9:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "3743:2:7",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "3728:3:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "3728:18:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "3720:4:7"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "3547:9:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "3561:4:7",
									"type": ""
								}
							],
							"src": "3396:356:7"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "3931:227:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "3948:9:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "3959:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "3941:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "3941:21:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "3941:21:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "3982:9:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "3993:2:7",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "3978:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "3978:18:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "3998:2:7",
													"type": "",
													"value": "37"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "3971:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "3971:30:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "3971:30:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "4021:9:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "4032:2:7",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "4017:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "4017:18:7"
												},
												{
													"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "4037:34:7",
													"type": "",
													"value": "ERC20: decreased allowance below"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "4010:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "4010:62:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "4010:62:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "4092:9:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "4103:2:7",
															"type": "",
															"value": "96"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "4088:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "4088:18:7"
												},
												{
													"hexValue": "207a65726f",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "4108:7:7",
													"type": "",
													"value": " zero"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "4081:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "4081:35:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "4081:35:7"
									},
									{
										"nodeType": "YulAssignment",
										"src": "4125:27:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "4137:9:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "4148:3:7",
													"type": "",
													"value": "128"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "4133:3:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "4133:19:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "4125:4:7"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "3908:9:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "3922:4:7",
									"type": ""
								}
							],
							"src": "3757:401:7"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "4337:228:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "4354:9:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "4365:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "4347:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "4347:21:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "4347:21:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "4388:9:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "4399:2:7",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "4384:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "4384:18:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "4404:2:7",
													"type": "",
													"value": "38"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "4377:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "4377:30:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "4377:30:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "4427:9:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "4438:2:7",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "4423:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "4423:18:7"
												},
												{
													"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "4443:34:7",
													"type": "",
													"value": "Ownable: new owner is the zero a"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "4416:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "4416:62:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "4416:62:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "4498:9:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "4509:2:7",
															"type": "",
															"value": "96"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "4494:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "4494:18:7"
												},
												{
													"hexValue": "646472657373",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "4514:8:7",
													"type": "",
													"value": "ddress"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "4487:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "4487:36:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "4487:36:7"
									},
									{
										"nodeType": "YulAssignment",
										"src": "4532:27:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "4544:9:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "4555:3:7",
													"type": "",
													"value": "128"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "4540:3:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "4540:19:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "4532:4:7"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "4314:9:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "4328:4:7",
									"type": ""
								}
							],
							"src": "4163:402:7"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "4744:226:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "4761:9:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "4772:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "4754:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "4754:21:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "4754:21:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "4795:9:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "4806:2:7",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "4791:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "4791:18:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "4811:2:7",
													"type": "",
													"value": "36"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "4784:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "4784:30:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "4784:30:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "4834:9:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "4845:2:7",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "4830:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "4830:18:7"
												},
												{
													"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "4850:34:7",
													"type": "",
													"value": "ERC20: approve from the zero add"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "4823:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "4823:62:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "4823:62:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "4905:9:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "4916:2:7",
															"type": "",
															"value": "96"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "4901:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "4901:18:7"
												},
												{
													"hexValue": "72657373",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "4921:6:7",
													"type": "",
													"value": "ress"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "4894:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "4894:34:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "4894:34:7"
									},
									{
										"nodeType": "YulAssignment",
										"src": "4937:27:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "4949:9:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "4960:3:7",
													"type": "",
													"value": "128"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "4945:3:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "4945:19:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "4937:4:7"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "4721:9:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "4735:4:7",
									"type": ""
								}
							],
							"src": "4570:400:7"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "5149:224:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "5166:9:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "5177:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "5159:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "5159:21:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "5159:21:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "5200:9:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "5211:2:7",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "5196:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "5196:18:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "5216:2:7",
													"type": "",
													"value": "34"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "5189:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "5189:30:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "5189:30:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "5239:9:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "5250:2:7",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "5235:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "5235:18:7"
												},
												{
													"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "5255:34:7",
													"type": "",
													"value": "ERC20: approve to the zero addre"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "5228:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "5228:62:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "5228:62:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "5310:9:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "5321:2:7",
															"type": "",
															"value": "96"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "5306:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "5306:18:7"
												},
												{
													"hexValue": "7373",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "5326:4:7",
													"type": "",
													"value": "ss"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "5299:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "5299:32:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "5299:32:7"
									},
									{
										"nodeType": "YulAssignment",
										"src": "5340:27:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "5352:9:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "5363:3:7",
													"type": "",
													"value": "128"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "5348:3:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "5348:19:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "5340:4:7"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "5126:9:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "5140:4:7",
									"type": ""
								}
							],
							"src": "4975:398:7"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "5552:179:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "5569:9:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "5580:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "5562:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "5562:21:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "5562:21:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "5603:9:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "5614:2:7",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "5599:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "5599:18:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "5619:2:7",
													"type": "",
													"value": "29"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "5592:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "5592:30:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "5592:30:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "5642:9:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "5653:2:7",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "5638:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "5638:18:7"
												},
												{
													"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "5658:31:7",
													"type": "",
													"value": "ERC20: insufficient allowance"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "5631:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "5631:59:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "5631:59:7"
									},
									{
										"nodeType": "YulAssignment",
										"src": "5699:26:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "5711:9:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "5722:2:7",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "5707:3:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "5707:18:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "5699:4:7"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "5529:9:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "5543:4:7",
									"type": ""
								}
							],
							"src": "5378:353:7"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "5910:227:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "5927:9:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "5938:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "5920:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "5920:21:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "5920:21:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "5961:9:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "5972:2:7",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "5957:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "5957:18:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "5977:2:7",
													"type": "",
													"value": "37"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "5950:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "5950:30:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "5950:30:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "6000:9:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6011:2:7",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "5996:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "5996:18:7"
												},
												{
													"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "6016:34:7",
													"type": "",
													"value": "ERC20: transfer from the zero ad"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "5989:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "5989:62:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "5989:62:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "6071:9:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6082:2:7",
															"type": "",
															"value": "96"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "6067:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "6067:18:7"
												},
												{
													"hexValue": "6472657373",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "6087:7:7",
													"type": "",
													"value": "dress"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "6060:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "6060:35:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "6060:35:7"
									},
									{
										"nodeType": "YulAssignment",
										"src": "6104:27:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "6116:9:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "6127:3:7",
													"type": "",
													"value": "128"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "6112:3:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "6112:19:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "6104:4:7"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "5887:9:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "5901:4:7",
									"type": ""
								}
							],
							"src": "5736:401:7"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "6316:225:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "6333:9:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "6344:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "6326:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "6326:21:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "6326:21:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "6367:9:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6378:2:7",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "6363:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "6363:18:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "6383:2:7",
													"type": "",
													"value": "35"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "6356:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "6356:30:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "6356:30:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "6406:9:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6417:2:7",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "6402:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "6402:18:7"
												},
												{
													"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "6422:34:7",
													"type": "",
													"value": "ERC20: transfer to the zero addr"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "6395:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "6395:62:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "6395:62:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "6477:9:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6488:2:7",
															"type": "",
															"value": "96"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "6473:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "6473:18:7"
												},
												{
													"hexValue": "657373",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "6493:5:7",
													"type": "",
													"value": "ess"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "6466:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "6466:33:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "6466:33:7"
									},
									{
										"nodeType": "YulAssignment",
										"src": "6508:27:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "6520:9:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "6531:3:7",
													"type": "",
													"value": "128"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "6516:3:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "6516:19:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "6508:4:7"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "6293:9:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "6307:4:7",
									"type": ""
								}
							],
							"src": "6142:399:7"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "6720:228:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "6737:9:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "6748:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "6730:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "6730:21:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "6730:21:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "6771:9:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6782:2:7",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "6767:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "6767:18:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "6787:2:7",
													"type": "",
													"value": "38"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "6760:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "6760:30:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "6760:30:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "6810:9:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6821:2:7",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "6806:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "6806:18:7"
												},
												{
													"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "6826:34:7",
													"type": "",
													"value": "ERC20: transfer amount exceeds b"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "6799:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "6799:62:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "6799:62:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "6881:9:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6892:2:7",
															"type": "",
															"value": "96"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "6877:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "6877:18:7"
												},
												{
													"hexValue": "616c616e6365",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "6897:8:7",
													"type": "",
													"value": "alance"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "6870:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "6870:36:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "6870:36:7"
									},
									{
										"nodeType": "YulAssignment",
										"src": "6915:27:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "6927:9:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "6938:3:7",
													"type": "",
													"value": "128"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "6923:3:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "6923:19:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "6915:4:7"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "6697:9:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "6711:4:7",
									"type": ""
								}
							],
							"src": "6546:402:7"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "7127:181:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "7144:9:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "7155:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "7137:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "7137:21:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "7137:21:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "7178:9:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "7189:2:7",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "7174:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "7174:18:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "7194:2:7",
													"type": "",
													"value": "31"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "7167:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "7167:30:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "7167:30:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "7217:9:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "7228:2:7",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "7213:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "7213:18:7"
												},
												{
													"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "7233:33:7",
													"type": "",
													"value": "ERC20: mint to the zero address"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "7206:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "7206:61:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "7206:61:7"
									},
									{
										"nodeType": "YulAssignment",
										"src": "7276:26:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "7288:9:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "7299:2:7",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "7284:3:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "7284:18:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "7276:4:7"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "7104:9:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "7118:4:7",
									"type": ""
								}
							],
							"src": "6953:355:7"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "7487:223:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "7504:9:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "7515:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "7497:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "7497:21:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "7497:21:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "7538:9:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "7549:2:7",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "7534:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "7534:18:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "7554:2:7",
													"type": "",
													"value": "33"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "7527:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "7527:30:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "7527:30:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "7577:9:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "7588:2:7",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "7573:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "7573:18:7"
												},
												{
													"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "7593:34:7",
													"type": "",
													"value": "ERC20: burn from the zero addres"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "7566:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "7566:62:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "7566:62:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "7648:9:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "7659:2:7",
															"type": "",
															"value": "96"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "7644:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "7644:18:7"
												},
												{
													"hexValue": "73",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "7664:3:7",
													"type": "",
													"value": "s"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "7637:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "7637:31:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "7637:31:7"
									},
									{
										"nodeType": "YulAssignment",
										"src": "7677:27:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "7689:9:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "7700:3:7",
													"type": "",
													"value": "128"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "7685:3:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "7685:19:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "7677:4:7"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "7464:9:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "7478:4:7",
									"type": ""
								}
							],
							"src": "7313:397:7"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "7889:224:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "7906:9:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "7917:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "7899:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "7899:21:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "7899:21:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "7940:9:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "7951:2:7",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "7936:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "7936:18:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "7956:2:7",
													"type": "",
													"value": "34"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "7929:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "7929:30:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "7929:30:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "7979:9:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "7990:2:7",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "7975:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "7975:18:7"
												},
												{
													"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "7995:34:7",
													"type": "",
													"value": "ERC20: burn amount exceeds balan"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "7968:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "7968:62:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "7968:62:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "8050:9:7"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "8061:2:7",
															"type": "",
															"value": "96"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "8046:3:7"
													},
													"nodeType": "YulFunctionCall",
													"src": "8046:18:7"
												},
												{
													"hexValue": "6365",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "8066:4:7",
													"type": "",
													"value": "ce"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "8039:6:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "8039:32:7"
										},
										"nodeType": "YulExpressionStatement",
										"src": "8039:32:7"
									},
									{
										"nodeType": "YulAssignment",
										"src": "8080:27:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "8092:9:7"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "8103:3:7",
													"type": "",
													"value": "128"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "8088:3:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "8088:19:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "8080:4:7"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "7866:9:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "7880:4:7",
									"type": ""
								}
							],
							"src": "7715:398:7"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "8167:79:7",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "8177:17:7",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "8189:1:7"
												},
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "8192:1:7"
												}
											],
											"functionName": {
												"name": "sub",
												"nodeType": "YulIdentifier",
												"src": "8185:3:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "8185:9:7"
										},
										"variableNames": [
											{
												"name": "diff",
												"nodeType": "YulIdentifier",
												"src": "8177:4:7"
											}
										]
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "8218:22:7",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x11",
															"nodeType": "YulIdentifier",
															"src": "8220:16:7"
														},
														"nodeType": "YulFunctionCall",
														"src": "8220:18:7"
													},
													"nodeType": "YulExpressionStatement",
													"src": "8220:18:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "diff",
													"nodeType": "YulIdentifier",
													"src": "8209:4:7"
												},
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "8215:1:7"
												}
											],
											"functionName": {
												"name": "gt",
												"nodeType": "YulIdentifier",
												"src": "8206:2:7"
											},
											"nodeType": "YulFunctionCall",
											"src": "8206:11:7"
										},
										"nodeType": "YulIf",
										"src": "8203:37:7"
									}
								]
							},
							"name": "checked_sub_t_uint256",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "x",
									"nodeType": "YulTypedName",
									"src": "8149:1:7",
									"type": ""
								},
								{
									"name": "y",
									"nodeType": "YulTypedName",
									"src": "8152:1:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "diff",
									"nodeType": "YulTypedName",
									"src": "8158:4:7",
									"type": ""
								}
							],
							"src": "8118:128:7"
						}
					]
				},
				"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n}",
				"id": 7,
				"language": "Yul",
				"name": "#utility.yul"
			}
		],
		"immutableReferences": {},
		"linkReferences": {},
		"object": "608060405234801561000f575f80fd5b5060043610610106575f3560e01c806370a082311161009e57806395d89b411161006e57806395d89b4114610218578063a457c2d714610220578063a9059cbb14610233578063dd62ed3e14610246578063f2fde38b1461027e575f80fd5b806370a08231146101ba578063715018a6146101e257806379cc6790146101ea5780638da5cb5b146101fd575f80fd5b8063313ce567116100d9578063313ce56714610170578063395093511461017f57806340c10f191461019257806342966c68146101a7575f80fd5b806306fdde031461010a578063095ea7b31461012857806318160ddd1461014b57806323b872dd1461015d575b5f80fd5b610112610291565b60405161011f9190610b68565b60405180910390f35b61013b610136366004610bce565b610321565b604051901515815260200161011f565b6002545b60405190815260200161011f565b61013b61016b366004610bf6565b61033a565b6040516008815260200161011f565b61013b61018d366004610bce565b61035d565b6101a56101a0366004610bce565b61039b565b005b6101a56101b5366004610c2f565b6103dc565b61014f6101c8366004610c46565b6001600160a01b03165f9081526020819052604090205490565b6101a56103e9565b6101a56101f8366004610bce565b61041e565b6005546040516001600160a01b03909116815260200161011f565b610112610433565b61013b61022e366004610bce565b610442565b61013b610241366004610bce565b6104d3565b61014f610254366004610c66565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6101a561028c366004610c46565b6104e0565b6060600380546102a090610c97565b80601f01602080910402602001604051908101604052809291908181526020018280546102cc90610c97565b80156103175780601f106102ee57610100808354040283529160200191610317565b820191905f5260205f20905b8154815290600101906020018083116102fa57829003601f168201915b5050505050905090565b5f3361032e818585610578565b60019150505b92915050565b5f3361034785828561069c565b61035285858561072c565b506001949350505050565b335f8181526001602090815260408083206001600160a01b038716845290915281205490919061032e9082908690610396908790610ce3565b610578565b6005546001600160a01b031633146103ce5760405162461bcd60e51b81526004016103c590610cf6565b60405180910390fd5b6103d882826108f8565b5050565b6103e633826109d4565b50565b6005546001600160a01b031633146104135760405162461bcd60e51b81526004016103c590610cf6565b61041c5f610b17565b565b61042982338361069c565b6103d882826109d4565b6060600480546102a090610c97565b335f8181526001602090815260408083206001600160a01b0387168452909152812054909190838110156104c65760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103c5565b6103528286868403610578565b5f3361032e81858561072c565b6005546001600160a01b0316331461050a5760405162461bcd60e51b81526004016103c590610cf6565b6001600160a01b03811661056f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103c5565b6103e681610b17565b6001600160a01b0383166105da5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103c5565b6001600160a01b03821661063b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103c5565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811461072657818110156107195760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103c5565b6107268484848403610578565b50505050565b6001600160a01b0383166107905760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103c5565b6001600160a01b0382166107f25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103c5565b6001600160a01b0383165f90815260208190526040902054818110156108695760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103c5565b6001600160a01b038085165f9081526020819052604080822085850390559185168152908120805484929061089f908490610ce3565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108eb91815260200190565b60405180910390a3610726565b6001600160a01b03821661094e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103c5565b8060025f82825461095f9190610ce3565b90915550506001600160a01b0382165f908152602081905260408120805483929061098b908490610ce3565b90915550506040518181526001600160a01b038316905f907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610a345760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103c5565b6001600160a01b0382165f9081526020819052604090205481811015610aa75760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103c5565b6001600160a01b0383165f908152602081905260408120838303905560028054849290610ad5908490610d2b565b90915550506040518281525f906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161068f565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f6020808352835180828501525f5b81811015610b9357858101830151858201604001528201610b77565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610bc9575f80fd5b919050565b5f8060408385031215610bdf575f80fd5b610be883610bb3565b946020939093013593505050565b5f805f60608486031215610c08575f80fd5b610c1184610bb3565b9250610c1f60208501610bb3565b9150604084013590509250925092565b5f60208284031215610c3f575f80fd5b5035919050565b5f60208284031215610c56575f80fd5b610c5f82610bb3565b9392505050565b5f8060408385031215610c77575f80fd5b610c8083610bb3565b9150610c8e60208401610bb3565b90509250929050565b600181811c90821680610cab57607f821691505b602082108103610cc957634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561033457610334610ccf565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b8181038181111561033457610334610ccf56fea26469706673582212209da38eb1c146751c9c957eb2dbe14de37ce552422b8dfbf3fcdeca56232de68d64736f6c63430008140033",
		"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x106 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x9E JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x27E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1FD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x15D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x112 PUSH2 0x291 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11F SWAP2 SWAP1 PUSH2 0xB68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH2 0x136 CALLDATASIZE PUSH1 0x4 PUSH2 0xBCE JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11F JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11F JUMP JUMPDEST PUSH2 0x13B PUSH2 0x16B CALLDATASIZE PUSH1 0x4 PUSH2 0xBF6 JUMP JUMPDEST PUSH2 0x33A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11F JUMP JUMPDEST PUSH2 0x13B PUSH2 0x18D CALLDATASIZE PUSH1 0x4 PUSH2 0xBCE JUMP JUMPDEST PUSH2 0x35D JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0xBCE JUMP JUMPDEST PUSH2 0x39B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A5 PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0xC2F JUMP JUMPDEST PUSH2 0x3DC JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0xC46 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x3E9 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0xBCE JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11F JUMP JUMPDEST PUSH2 0x112 PUSH2 0x433 JUMP JUMPDEST PUSH2 0x13B PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0xBCE JUMP JUMPDEST PUSH2 0x442 JUMP JUMPDEST PUSH2 0x13B PUSH2 0x241 CALLDATASIZE PUSH1 0x4 PUSH2 0xBCE JUMP JUMPDEST PUSH2 0x4D3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0xC66 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0xC46 JUMP JUMPDEST PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2A0 SWAP1 PUSH2 0xC97 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2CC SWAP1 PUSH2 0xC97 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x317 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2EE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x317 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2FA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x32E DUP2 DUP6 DUP6 PUSH2 0x578 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x347 DUP6 DUP3 DUP6 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x352 DUP6 DUP6 DUP6 PUSH2 0x72C JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x32E SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x396 SWAP1 DUP8 SWAP1 PUSH2 0xCE3 JUMP JUMPDEST PUSH2 0x578 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C5 SWAP1 PUSH2 0xCF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3D8 DUP3 DUP3 PUSH2 0x8F8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3E6 CALLER DUP3 PUSH2 0x9D4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x413 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C5 SWAP1 PUSH2 0xCF6 JUMP JUMPDEST PUSH2 0x41C PUSH0 PUSH2 0xB17 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x429 DUP3 CALLER DUP4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x3D8 DUP3 DUP3 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2A0 SWAP1 PUSH2 0xC97 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x4C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C5 JUMP JUMPDEST PUSH2 0x352 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x578 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x32E DUP2 DUP6 DUP6 PUSH2 0x72C JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x50A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C5 SWAP1 PUSH2 0xCF6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x56F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C5 JUMP JUMPDEST PUSH2 0x3E6 DUP2 PUSH2 0xB17 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x63B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x726 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x719 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C5 JUMP JUMPDEST PUSH2 0x726 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x578 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x790 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x869 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x89F SWAP1 DUP5 SWAP1 PUSH2 0xCE3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x8EB SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x726 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x94E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C5 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x95F SWAP2 SWAP1 PUSH2 0xCE3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x98B SWAP1 DUP5 SWAP1 PUSH2 0xCE3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xAA7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xAD5 SWAP1 DUP5 SWAP1 PUSH2 0xD2B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x68F JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB93 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xB77 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBC9 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBE8 DUP4 PUSH2 0xBB3 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC08 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC11 DUP5 PUSH2 0xBB3 JUMP JUMPDEST SWAP3 POP PUSH2 0xC1F PUSH1 0x20 DUP6 ADD PUSH2 0xBB3 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC3F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC56 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC5F DUP3 PUSH2 0xBB3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC77 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC80 DUP4 PUSH2 0xBB3 JUMP JUMPDEST SWAP2 POP PUSH2 0xC8E PUSH1 0x20 DUP5 ADD PUSH2 0xBB3 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xCAB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xCC9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x334 JUMPI PUSH2 0x334 PUSH2 0xCCF JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x334 JUMPI PUSH2 0x334 PUSH2 0xCCF JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 LOG3 DUP15 0xB1 0xC1 CHAINID PUSH22 0x1C9C957EB2DBE14DE37CE552422B8DFBF3FCDECA5623 0x2D 0xE6 DUP14 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
		"sourceMap": "1465:313:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3383:98:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5660:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:7;;1162:22;1144:41;;1132:2;1117:18;5660:197:1;1004:187:7;4471:106:1;4558:12;;4471:106;;;1342:25:7;;;1330:2;1315:18;4471:106:1;1196:177:7;6419:286:1;;;;;;:::i;:::-;;:::i;1686:90:3:-;;;1768:1;1853:36:7;;1841:2;1826:18;1686:90:3;1711:184:7;7100:236:1;;;;;;:::i;:::-;;:::i;1587:93:3:-;;;;;;:::i;:::-;;:::i;:::-;;1812:89:2;;;;;;:::i;:::-;;:::i;4635:125:1:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4735:18:1;4709:7;4735:18;;;;;;;;;;;;4635:125;2909:101:6;;;:::i;2207:161:2:-;;;;;;:::i;:::-;;:::i;2277:85:6:-;2349:6;;2277:85;;-1:-1:-1;;;;;2349:6:6;;;2422:51:7;;2410:2;2395:18;2277:85:6;2276:203:7;3594:102:1;;;:::i;7823:429::-;;;;;;:::i;:::-;;:::i;4956:189::-;;;;;;:::i;:::-;;:::i;5203:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;5318:18:1;;;5292:7;5318:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;5203:149;3159:198:6;;;;;;:::i;:::-;;:::i;3383:98:1:-;3437:13;3469:5;3462:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3383:98;:::o;5660:197::-;5743:4;1967:10:0;5797:32:1;1967:10:0;5813:7:1;5822:6;5797:8;:32::i;:::-;5846:4;5839:11;;;5660:197;;;;;:::o;6419:286::-;6546:4;1967:10:0;6602:38:1;6618:4;1967:10:0;6633:6:1;6602:15;:38::i;:::-;6650:27;6660:4;6666:2;6670:6;6650:9;:27::i;:::-;-1:-1:-1;6694:4:1;;6419:286;-1:-1:-1;;;;6419:286:1:o;7100:236::-;1967:10:0;7188:4:1;7267:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;7267:27:1;;;;;;;;;;7188:4;;1967:10:0;7242:66:1;;1967:10:0;;7267:27:1;;:40;;7297:10;;7267:40;:::i;:::-;7242:8;:66::i;1587:93:3:-;2349:6:6;;-1:-1:-1;;;;;2349:6:6;1967:10:0;2489:23:6;2481:68;;;;-1:-1:-1;;;2481:68:6;;;;;;;:::i;:::-;;;;;;;;;1656:17:3::1;1662:2;1666:6;1656:5;:17::i;:::-;1587:93:::0;;:::o;1812:89:2:-;1867:27;1967:10:0;1887:6:2;1867:5;:27::i;:::-;1812:89;:::o;2909:101:6:-;2349:6;;-1:-1:-1;;;;;2349:6:6;1967:10:0;2489:23:6;2481:68;;;;-1:-1:-1;;;2481:68:6;;;;;;;:::i;:::-;2973:30:::1;3000:1;2973:18;:30::i;:::-;2909:101::o:0;2207:161:2:-;2283:46;2299:7;1967:10:0;2322:6:2;2283:15;:46::i;:::-;2339:22;2345:7;2354:6;2339:5;:22::i;3594:102:1:-;3650:13;3682:7;3675:14;;;;;:::i;7823:429::-;1967:10:0;7916:4:1;7997:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;7997:27:1;;;;;;;;;;7916:4;;1967:10:0;8042:35:1;;;;8034:85;;;;-1:-1:-1;;;8034:85:1;;3959:2:7;8034:85:1;;;3941:21:7;3998:2;3978:18;;;3971:30;4037:34;4017:18;;;4010:62;-1:-1:-1;;;4088:18:7;;;4081:35;4133:19;;8034:85:1;3757:401:7;8034:85:1;8153:60;8162:5;8169:7;8197:15;8178:16;:34;8153:8;:60::i;4956:189::-;5035:4;1967:10:0;5089:28:1;1967:10:0;5106:2:1;5110:6;5089:9;:28::i;3159:198:6:-;2349:6;;-1:-1:-1;;;;;2349:6:6;1967:10:0;2489:23:6;2481:68;;;;-1:-1:-1;;;2481:68:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;3247:22:6;::::1;3239:73;;;::::0;-1:-1:-1;;;3239:73:6;;4365:2:7;3239:73:6::1;::::0;::::1;4347:21:7::0;4404:2;4384:18;;;4377:30;4443:34;4423:18;;;4416:62;-1:-1:-1;;;4494:18:7;;;4487:36;4540:19;;3239:73:6::1;4163:402:7::0;3239:73:6::1;3322:28;3341:8;3322:18;:28::i;11350:370:1:-:0;-1:-1:-1;;;;;11481:19:1;;11473:68;;;;-1:-1:-1;;;11473:68:1;;4772:2:7;11473:68:1;;;4754:21:7;4811:2;4791:18;;;4784:30;4850:34;4830:18;;;4823:62;-1:-1:-1;;;4901:18:7;;;4894:34;4945:19;;11473:68:1;4570:400:7;11473:68:1;-1:-1:-1;;;;;11559:21:1;;11551:68;;;;-1:-1:-1;;;11551:68:1;;5177:2:7;11551:68:1;;;5159:21:7;5216:2;5196:18;;;5189:30;5255:34;5235:18;;;5228:62;-1:-1:-1;;;5306:18:7;;;5299:32;5348:19;;11551:68:1;4975:398:7;11551:68:1;-1:-1:-1;;;;;11630:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11681:32;;1342:25:7;;;11681:32:1;;1315:18:7;11681:32:1;;;;;;;;11350:370;;;:::o;11997:441::-;-1:-1:-1;;;;;5318:18:1;;;12127:24;5318:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;12193:37:1;;12189:243;;12274:6;12254:16;:26;;12246:68;;;;-1:-1:-1;;;12246:68:1;;5580:2:7;12246:68:1;;;5562:21:7;5619:2;5599:18;;;5592:30;5658:31;5638:18;;;5631:59;5707:18;;12246:68:1;5378:353:7;12246:68:1;12356:51;12365:5;12372:7;12400:6;12381:16;:25;12356:8;:51::i;:::-;12117:321;11997:441;;;:::o;8715:651::-;-1:-1:-1;;;;;8841:18:1;;8833:68;;;;-1:-1:-1;;;8833:68:1;;5938:2:7;8833:68:1;;;5920:21:7;5977:2;5957:18;;;5950:30;6016:34;5996:18;;;5989:62;-1:-1:-1;;;6067:18:7;;;6060:35;6112:19;;8833:68:1;5736:401:7;8833:68:1;-1:-1:-1;;;;;8919:16:1;;8911:64;;;;-1:-1:-1;;;8911:64:1;;6344:2:7;8911:64:1;;;6326:21:7;6383:2;6363:18;;;6356:30;6422:34;6402:18;;;6395:62;-1:-1:-1;;;6473:18:7;;;6466:33;6516:19;;8911:64:1;6142:399:7;8911:64:1;-1:-1:-1;;;;;9057:15:1;;9035:19;9057:15;;;;;;;;;;;9090:21;;;;9082:72;;;;-1:-1:-1;;;9082:72:1;;6748:2:7;9082:72:1;;;6730:21:7;6787:2;6767:18;;;6760:30;6826:34;6806:18;;;6799:62;-1:-1:-1;;;6877:18:7;;;6870:36;6923:19;;9082:72:1;6546:402:7;9082:72:1;-1:-1:-1;;;;;9188:15:1;;;:9;:15;;;;;;;;;;;9206:20;;;9188:38;;9246:13;;;;;;;;:23;;9220:6;;9188:9;9246:23;;9220:6;;9246:23;:::i;:::-;;;;;;;;9300:2;-1:-1:-1;;;;;9285:26:1;9294:4;-1:-1:-1;;;;;9285:26:1;;9304:6;9285:26;;;;1342:25:7;;1330:2;1315:18;;1196:177;9285:26:1;;;;;;;;9322:37;10351:576;9642:389;-1:-1:-1;;;;;9725:21:1;;9717:65;;;;-1:-1:-1;;;9717:65:1;;7155:2:7;9717:65:1;;;7137:21:7;7194:2;7174:18;;;7167:30;7233:33;7213:18;;;7206:61;7284:18;;9717:65:1;6953:355:7;9717:65:1;9869:6;9853:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9885:18:1;;:9;:18;;;;;;;;;;:28;;9907:6;;9885:9;:28;;9907:6;;9885:28;:::i;:::-;;;;-1:-1:-1;;9928:37:1;;1342:25:7;;;-1:-1:-1;;;;;9928:37:1;;;9945:1;;9928:37;;1330:2:7;1315:18;9928:37:1;;;;;;;1587:93:3;;:::o;10351:576:1:-;-1:-1:-1;;;;;10434:21:1;;10426:67;;;;-1:-1:-1;;;10426:67:1;;7515:2:7;10426:67:1;;;7497:21:7;7554:2;7534:18;;;7527:30;7593:34;7573:18;;;7566:62;-1:-1:-1;;;7644:18:7;;;7637:31;7685:19;;10426:67:1;7313:397:7;10426:67:1;-1:-1:-1;;;;;10589:18:1;;10564:22;10589:18;;;;;;;;;;;10625:24;;;;10617:71;;;;-1:-1:-1;;;10617:71:1;;7917:2:7;10617:71:1;;;7899:21:7;7956:2;7936:18;;;7929:30;7995:34;7975:18;;;7968:62;-1:-1:-1;;;8046:18:7;;;8039:32;8088:19;;10617:71:1;7715:398:7;10617:71:1;-1:-1:-1;;;;;10722:18:1;;:9;:18;;;;;;;;;;10743:23;;;10722:44;;10786:12;:22;;10760:6;;10722:9;10786:22;;10760:6;;10786:22;:::i;:::-;;;;-1:-1:-1;;10824:37:1;;1342:25:7;;;10850:1:1;;-1:-1:-1;;;;;10824:37:1;;;;;1330:2:7;1315:18;10824:37:1;1196:177:7;3511:187:6;3603:6;;;-1:-1:-1;;;;;3619:17:6;;;-1:-1:-1;;;;;;3619:17:6;;;;;;;3651:40;;3603:6;;;3619:17;3603:6;;3651:40;;3584:16;;3651:40;3574:124;3511:187;:::o;14:548:7:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:7;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:7:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:180::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;-1:-1:-1;2051:23:7;;1900:180;-1:-1:-1;1900:180:7:o;2085:186::-;2144:6;2197:2;2185:9;2176:7;2172:23;2168:32;2165:52;;;2213:1;2210;2203:12;2165:52;2236:29;2255:9;2236:29;:::i;:::-;2226:39;2085:186;-1:-1:-1;;;2085:186:7:o;2484:260::-;2552:6;2560;2613:2;2601:9;2592:7;2588:23;2584:32;2581:52;;;2629:1;2626;2619:12;2581:52;2652:29;2671:9;2652:29;:::i;:::-;2642:39;;2700:38;2734:2;2723:9;2719:18;2700:38;:::i;:::-;2690:48;;2484:260;;;;;:::o;2749:380::-;2828:1;2824:12;;;;2871;;;2892:61;;2946:4;2938:6;2934:17;2924:27;;2892:61;2999:2;2991:6;2988:14;2968:18;2965:38;2962:161;;3045:10;3040:3;3036:20;3033:1;3026:31;3080:4;3077:1;3070:15;3108:4;3105:1;3098:15;2962:161;;2749:380;;;:::o;3134:127::-;3195:10;3190:3;3186:20;3183:1;3176:31;3226:4;3223:1;3216:15;3250:4;3247:1;3240:15;3266:125;3331:9;;;3352:10;;;3349:36;;;3365:18;;:::i;3396:356::-;3598:2;3580:21;;;3617:18;;;3610:30;3676:34;3671:2;3656:18;;3649:62;3743:2;3728:18;;3396:356::o;8118:128::-;8185:9;;;8206:11;;;8203:37;;;8220:18;;:::i"
	},
	"Assembly": ".code\n  PUSH 80\t\t\t\n  PUSH 40\t\t\t\n  MSTORE \t\t\t\n  CALLVALUE \t\t\t\n  DUP1 \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 1\t\t\t\n  JUMPI \t\t\t\n  PUSH 0\t\t\t\n  DUP1 \t\t\t\n  REVERT \t\t\t\ntag 1\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  DUP1 \t\t\t\n  PUSH 40\t\t\t\n  ADD \t\t\t\n  PUSH 40\t\t\t\n  MSTORE \t\t\t\n  DUP1 \t\t\t\n  PUSH 11\t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 20\t\t\t\n  ADD \t\t\t\n  PUSH 23B932B2B729B0BA37B9B434AA37B5B2B7\t\t\t\n  PUSH 79\t\t\t\n  SHL \t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  POP \t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  DUP1 \t\t\t\n  PUSH 40\t\t\t\n  ADD \t\t\t\n  PUSH 40\t\t\t\n  MSTORE \t\t\t\n  DUP1 \t\t\t\n  PUSH 3\t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 20\t\t\t\n  ADD \t\t\t\n  PUSH 11D4D5\t\t\t\n  PUSH EA\t\t\t\n  SHL \t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  POP \t\t\t\n  DUP2 \t\t\t\n  PUSH 3\t\t\t\n  SWAP1 \t\t\t\n  DUP2 \t\t\t\n  PUSH [tag] 6\t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  PUSH [tag] 7\t\t\t\n  JUMP \t\t\t\ntag 6\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  PUSH 4\t\t\t\n  PUSH [tag] 8\t\t\t\n  DUP3 \t\t\t\n  DUP3 \t\t\t\n  PUSH [tag] 7\t\t\t\n  JUMP \t\t\t\ntag 8\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  PUSH [tag] 10\t\t\t\n  PUSH [tag] 11\t\t\t\n  PUSH [tag] 12\t\t\t\n  PUSH 20\t\t\t\n  SHL \t\t\t\n  PUSH 20\t\t\t\n  SHR \t\t\t\n  JUMP \t\t\t\ntag 11\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 13\t\t\t\n  JUMP \t\t\t\ntag 10\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 23\t\t\t\n  JUMP \t\t\t\ntag 12\t\t\t\n  JUMPDEST \t\t\t\n  CALLER \t\t\t\n  SWAP1 \t\t\t\n  JUMP \t\t\t\ntag 13\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 5\t\t\t\n  DUP1 \t\t\t\n  SLOAD \t\t\t\n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH A0\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  DUP4 \t\t\t\n  DUP2 \t\t\t\n  AND \t\t\t\n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH A0\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  NOT \t\t\t\n  DUP4 \t\t\t\n  AND \t\t\t\n  DUP2 \t\t\t\n  OR \t\t\t\n  SWAP1 \t\t\t\n  SWAP4 \t\t\t\n  SSTORE \t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  SWAP2 \t\t\t\n  AND \t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  DUP3 \t\t\t\n  SWAP1 \t\t\t\n  PUSH 8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0\t\t\t\n  SWAP1 \t\t\t\n  PUSH 0\t\t\t\n  SWAP1 \t\t\t\n  LOG3 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 18\t\t\t ██████   ██████  ██   ██ ████...\n  JUMPDEST \t\t\t ██████   ██████  ██   ██ ████...\n  PUSH 4E487B71\t\t\t  ██████  \n  PUSH E0\t\t\t ██\n  SHL \t\t\t██   ██    ██████  █\n  PUSH 0\t\t\t█\n  MSTORE \t\t\t  ██████  ██   ██    ██████  █...\n  PUSH 41\t\t\t    \n  PUSH 4\t\t\t█\n  MSTORE \t\t\t   ██\\n██      █\n  PUSH 24\t\t\t  ██\n  PUSH 0\t\t\t \n  REVERT \t\t\t█    ██ ██  ██ \ntag 19\t\t\t    ██ ██    ██ ██  ██     ██ ...\n  JUMPDEST \t\t\t    ██ ██    ██ ██  ██     ██ ...\n  PUSH 1\t\t\t█\n  DUP2 \t\t\t██ █████   █\n  DUP2 \t\t\t██ █████   █\n  SHR \t\t\t██ █████   █\n  SWAP1 \t\t\t██ █████   █\n  DUP3 \t\t\t ██   ██ ███\n  AND \t\t\t ██   ██ ███\n  DUP1 \t\t\t ██   ██ ███\n  PUSH [tag] 26\t\t\t  ██\\n██      ██    ██ ██    █...\n  JUMPI \t\t\t  ██\\n██      ██    ██ ██    █...\n  PUSH 7F\t\t\t█ ██\n  DUP3 \t\t\t ██   \n  AND \t\t\t  ██ ██    ██ ██ \n  SWAP2 \t\t\t█  ██  ██   ██ ██    ██ ██ \n  POP \t\t\t█  ██  ██   ██ ██    ██ ██ \ntag 26\t\t\t  ██\\n██      ██    ██ ██    █...\n  JUMPDEST \t\t\t  ██\\n██      ██    ██ ██    █...\n  PUSH 20\t\t\t  \n  DUP3 \t\t\t\\n ████\n  LT \t\t\t ██\\n ██████  █\n  DUP2 \t\t\t██   ██ ██       █\n  SUB \t\t\t   ██   ██ ██       ██  ██\\n █...\n  PUSH [tag] 27\t\t\t█     ██   ██ ██       ██  ██\\...\n  JUMPI \t\t\t█     ██   ██ ██       ██  ██\\...\n  PUSH 4E487B71\t\t\t█████  ██ \n  PUSH E0\t\t\t█  \n  SHL \t\t\t█████   ██████  ██  \n  PUSH 0\t\t\t \n  MSTORE \t\t\t██████   ██████   ██████  ██  ...\n  PUSH 22\t\t\t ███\n  PUSH 4\t\t\t█\n  MSTORE \t\t\t ███████   ████\n  PUSH 24\t\t\tct, \n  PUSH 0\t\t\tt\n  REVERT \t\t\tart contract, a\ntag 27\t\t\t█     ██   ██ ██       ██  ██\\...\n  JUMPDEST \t\t\t█     ██   ██ ██       ██  ██\\...\n  POP \t\t\t█     ██   ██ ██       ██  ██\\...\n  SWAP2 \t\t\t    ██ ██    ██ ██  ██     ██ ...\n  SWAP1 \t\t\t    ██ ██    ██ ██  ██     ██ ...\n  POP \t\t\t    ██ ██    ██ ██  ██     ██ ...\n  JUMP \t\t\t    ██ ██    ██ ██  ██     ██ ...\ntag 21\t\t\tcontract on Cookbook: https://...\n  JUMPDEST \t\t\tcontract on Cookbook: https://...\n  PUSH 1F\t\t\tGr\n  DUP3 \t\t\tact\n  GT \t\t\tntracts/Gre\n  ISZERO \t\t\t contracts/GreenSatoshiToken.s...\n  PUSH [tag] 30\t\t\t contracts/GreenSatoshiToken.s...\n  JUMPI \t\t\t contracts/GreenSatoshiToken.s...\n  PUSH 0\t\t\te\n  DUP2 \t\t\tsolid\n  DUP2 \t\t\tgm\n  MSTORE \t\t\tMIT\\npragma solidi\n  PUSH 20\t\t\tt \".\n  DUP2 \t\t\tmp\n  KECCAK256 \t\t\t20.sol\";\\nimport \"./\n  PUSH 1F\t\t\t T\n  DUP6 \t\t\treen Satos\n  ADD \t\t\t * Green Satoshi To\n  PUSH 5\t\t\t*\n  SHR \t\t\t;\\n\\n/**\\n * Green Satoshi Tok\n  DUP2 \t\t\te.so\n  ADD \t\t\tnable.sol\";\\n\\n/**\\n * Green S...\n  PUSH 20\t\t\t Gre\n  DUP7 \t\t\t */\\ncontra\n  LT \t\t\tPN\\n */\\ncontract Gree\n  ISZERO \t\t\tSTEPN\\n */\\ncontract GreenSato...\n  PUSH [tag] 31\t\t\tSTEPN\\n */\\ncontract GreenSato...\n  JUMPI \t\t\tSTEPN\\n */\\ncontract GreenSato...\n  POP \t\t\t\n  DUP1 \t\t\tRC20\ntag 31\t\t\tSTEPN\\n */\\ncontract GreenSato...\n  JUMPDEST \t\t\tSTEPN\\n */\\ncontract GreenSato...\n  PUSH 1F\t\t\t\"G\n  DUP6 \t\t\tRC2\n  ADD \t\t\t() ERC20(\"Gr\n  PUSH 5\t\t\tt\n  SHR \t\t\ttructor() ERC20(\"Gre\n  DUP3 \t\t\t  co\n  ADD \t\t\t{\\n    constructor() ERC20(\"Gr...\n  SWAP2 \t\t\t, Ownable {\\n    constructor()...\n  POP \t\t\t, Ownable {\\n    constructor()...\ntag 32\t\t\tss to, uint256 amount) public ...\n  JUMPDEST \t\t\tss to, uint256 amount) public ...\n  DUP2 \t\t\tun\n  DUP2 \t\t\t256 a\n  LT \t\t\tint256 amount\n  ISZERO \t\t\tss to, uint256 amount) public ...\n  PUSH [tag] 34\t\t\tss to, uint256 amount) public ...\n  JUMPI \t\t\tss to, uint256 amount) public ...\n  DUP3 \t\t\tunt);\\n    }\\n\\n    \n  DUP2 \t\t\tunt);\\n    }\\n\\n    \n  SSTORE \t\t\tunt);\\n    }\\n\\n    \n  PUSH 1\t\t\t \n  ADD \t\t\tyOwner {\\n    \n  PUSH [tag] 32\t\t\tss to, uint256 amount) public ...\n  JUMP \t\t\tss to, uint256 amount) public ...\ntag 34\t\t\tss to, uint256 amount) public ...\n  JUMPDEST \t\t\tss to, uint256 amount) public ...\n  POP \t\t\to, \n  POP \t\t\to, \n  POP \t\t\to, \ntag 30\t\t\t contracts/GreenSatoshiToken.s...\n  JUMPDEST \t\t\t contracts/GreenSatoshiToken.s...\n  POP \t\t\tcontract on Cookbook: https://...\n  POP \t\t\tcontract on Cookbook: https://...\n  POP \t\t\tcontract on Cookbook: https://...\n  JUMP \t\t\tcontract on Cookbook: https://...\ntag 7\t\t\t\n  JUMPDEST \t\t\t\n  DUP2 \t\t\t\n  MLOAD \t\t\t\n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH 40\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  DUP2 \t\t\t\n  GT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 38\t\t\t\n  JUMPI \t\t\t\n  PUSH [tag] 38\t\t\t\n  PUSH [tag] 18\t\t\t\n  JUMP \t\t\t\ntag 38\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 39\t\t\t\n  DUP2 \t\t\t\n  PUSH [tag] 40\t\t\t\n  DUP5 \t\t\t\n  SLOAD \t\t\t\n  PUSH [tag] 19\t\t\t\n  JUMP \t\t\t\ntag 40\t\t\t\n  JUMPDEST \t\t\t\n  DUP5 \t\t\t\n  PUSH [tag] 21\t\t\t\n  JUMP \t\t\t\ntag 39\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 20\t\t\t\n  DUP1 \t\t\t\n  PUSH 1F\t\t\t\n  DUP4 \t\t\t\n  GT \t\t\t\n  PUSH 1\t\t\t\n  DUP2 \t\t\t\n  EQ \t\t\t\n  PUSH [tag] 42\t\t\t\n  JUMPI \t\t\t\n  PUSH 0\t\t\t\n  DUP5 \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 43\t\t\t\n  JUMPI \t\t\t\n  POP \t\t\t\n  DUP6 \t\t\t\n  DUP4 \t\t\t\n  ADD \t\t\t\n  MLOAD \t\t\t\ntag 43\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  NOT \t\t\t\n  PUSH 3\t\t\t\n  DUP7 \t\t\t\n  SWAP1 \t\t\t\n  SHL \t\t\t\n  SHR \t\t\t\n  NOT \t\t\t\n  AND \t\t\t\n  PUSH 1\t\t\t\n  DUP6 \t\t\t\n  SWAP1 \t\t\t\n  SHL \t\t\t\n  OR \t\t\t\n  DUP6 \t\t\t\n  SSTORE \t\t\t\n  PUSH [tag] 34\t\t\t\n  JUMP \t\t\t\ntag 42\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\te\n  DUP6 \t\t\tkbook_dev\\nDisc\n  DUP2 \t\t\tkbook_dev\\nDisc\n  MSTORE \t\t\tkbook_dev\\nDisc\n  PUSH 20\t\t\tfHrk\n  DUP2 \t\t\tord.gg/WzsfPcfHrk\\n\n  KECCAK256 \t\t\tord.gg/WzsfPcfHrk\\n\n  PUSH 1F\t\t\t\n  NOT \t\t\t\n  DUP7 \t\t\t\n  AND \t\t\t\n  SWAP2 \t\t\t\ntag 46\t\t\t\n  JUMPDEST \t\t\t\n  DUP3 \t\t\t\n  DUP2 \t\t\t\n  LT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 48\t\t\t\n  JUMPI \t\t\t\n  DUP9 \t\t\t\n  DUP7 \t\t\t\n  ADD \t\t\t\n  MLOAD \t\t\t\n  DUP3 \t\t\t\n  SSTORE \t\t\t\n  SWAP5 \t\t\t\n  DUP5 \t\t\t\n  ADD \t\t\t\n  SWAP5 \t\t\t\n  PUSH 1\t\t\t\n  SWAP1 \t\t\t\n  SWAP2 \t\t\t\n  ADD \t\t\t\n  SWAP1 \t\t\t\n  DUP5 \t\t\t\n  ADD \t\t\t\n  PUSH [tag] 46\t\t\t\n  JUMP \t\t\t\ntag 48\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  DUP6 \t\t\t\n  DUP3 \t\t\t\n  LT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 49\t\t\t\n  JUMPI \t\t\t\n  DUP8 \t\t\t\n  DUP6 \t\t\t\n  ADD \t\t\t\n  MLOAD \t\t\t\n  PUSH 0\t\t\t\n  NOT \t\t\t\n  PUSH 3\t\t\t\n  DUP9 \t\t\t\n  SWAP1 \t\t\t\n  SHL \t\t\t\n  PUSH F8\t\t\t\n  AND \t\t\t\n  SHR \t\t\t\n  NOT \t\t\t\n  AND \t\t\t\n  DUP2 \t\t\t\n  SSTORE \t\t\t\ntag 49\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  PUSH 1\t\t\t\n  SWAP1 \t\t\t\n  DUP2 \t\t\t\n  SHL \t\t\t\n  ADD \t\t\t\n  SWAP1 \t\t\t\n  SSTORE \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 23\t\t\t\n  JUMPDEST \t\t\t\n  PUSH #[$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\t\n  DUP1 \t\t\t\n  PUSH [$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\t\n  PUSH 0\t\t\t\n  CODECOPY \t\t\t\n  PUSH 0\t\t\t\n  RETURN \t\t\t\n.data\n  0:\n    .code\n      PUSH 80\t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      CALLVALUE \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 1\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 1\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      PUSH 4\t\t\t\n      CALLDATASIZE \t\t\t\n      LT \t\t\t\n      PUSH [tag] 2\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      CALLDATALOAD \t\t\t\n      PUSH E0\t\t\t\n      SHR \t\t\t\n      DUP1 \t\t\t\n      PUSH 70A08231\t\t\t\n      GT \t\t\t\n      PUSH [tag] 20\t\t\t\n      JUMPI \t\t\t\n      DUP1 \t\t\t\n      PUSH 95D89B41\t\t\t\n      GT \t\t\t\n      PUSH [tag] 21\t\t\t\n      JUMPI \t\t\t\n      DUP1 \t\t\t\n      PUSH 95D89B41\t\t\t\n      EQ \t\t\t\n      PUSH [tag] 15\t\t\t\n      JUMPI \t\t\t\n      DUP1 \t\t\t\n      PUSH A457C2D7\t\t\t\n      EQ \t\t\t\n      PUSH [tag] 16\t\t\t\n      JUMPI \t\t\t\n      DUP1 \t\t\t\n      PUSH A9059CBB\t\t\t\n      EQ \t\t\t\n      PUSH [tag] 17\t\t\t\n      JUMPI \t\t\t\n      DUP1 \t\t\t\n      PUSH DD62ED3E\t\t\t\n      EQ \t\t\t\n      PUSH [tag] 18\t\t\t\n      JUMPI \t\t\t\n      DUP1 \t\t\t\n      PUSH F2FDE38B\t\t\t\n      EQ \t\t\t\n      PUSH [tag] 19\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 21\t\t\t\n      JUMPDEST \t\t\t\n      DUP1 \t\t\t\n      PUSH 70A08231\t\t\t\n      EQ \t\t\t\n      PUSH [tag] 11\t\t\t\n      JUMPI \t\t\t\n      DUP1 \t\t\t\n      PUSH 715018A6\t\t\t\n      EQ \t\t\t\n      PUSH [tag] 12\t\t\t\n      JUMPI \t\t\t\n      DUP1 \t\t\t\n      PUSH 79CC6790\t\t\t\n      EQ \t\t\t\n      PUSH [tag] 13\t\t\t\n      JUMPI \t\t\t\n      DUP1 \t\t\t\n      PUSH 8DA5CB5B\t\t\t\n      EQ \t\t\t\n      PUSH [tag] 14\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 20\t\t\t\n      JUMPDEST \t\t\t\n      DUP1 \t\t\t\n      PUSH 313CE567\t\t\t\n      GT \t\t\t\n      PUSH [tag] 22\t\t\t\n      JUMPI \t\t\t\n      DUP1 \t\t\t\n      PUSH 313CE567\t\t\t\n      EQ \t\t\t\n      PUSH [tag] 7\t\t\t\n      JUMPI \t\t\t\n      DUP1 \t\t\t\n      PUSH 39509351\t\t\t\n      EQ \t\t\t\n      PUSH [tag] 8\t\t\t\n      JUMPI \t\t\t\n      DUP1 \t\t\t\n      PUSH 40C10F19\t\t\t\n      EQ \t\t\t\n      PUSH [tag] 9\t\t\t\n      JUMPI \t\t\t\n      DUP1 \t\t\t\n      PUSH 42966C68\t\t\t\n      EQ \t\t\t\n      PUSH [tag] 10\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 22\t\t\t\n      JUMPDEST \t\t\t\n      DUP1 \t\t\t\n      PUSH 6FDDE03\t\t\t\n      EQ \t\t\t\n      PUSH [tag] 3\t\t\t\n      JUMPI \t\t\t\n      DUP1 \t\t\t\n      PUSH 95EA7B3\t\t\t\n      EQ \t\t\t\n      PUSH [tag] 4\t\t\t\n      JUMPI \t\t\t\n      DUP1 \t\t\t\n      PUSH 18160DDD\t\t\t\n      EQ \t\t\t\n      PUSH [tag] 5\t\t\t\n      JUMPI \t\t\t\n      DUP1 \t\t\t\n      PUSH 23B872DD\t\t\t\n      EQ \t\t\t\n      PUSH [tag] 6\t\t\t\n      JUMPI \t\t\t\n    tag 2\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 3\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 23\t\t\t\n      PUSH [tag] 24\t\t\t\n      JUMP \t\t\t\n    tag 23\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH [tag] 25\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 26\t\t\t\n      JUMP \t\t\t\n    tag 25\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      RETURN \t\t\t\n    tag 4\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 27\t\t\t\n      PUSH [tag] 28\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 29\t\t\t\n      JUMP \t\t\t\n    tag 28\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 30\t\t\t\n      JUMP \t\t\t\n    tag 27\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      SWAP1 \t\t\tt);\\n    }\\n\\n   \n      ISZERO \t\t\tt);\\n    }\\n\\n   \n      ISZERO \t\t\t, amount);\\n    }\\n\\n    \n      DUP2 \t\t\t{\\n        _mint(to, amount);\\...\n      MSTORE \t\t\t{\\n        _mint(to, amount);\\...\n      PUSH 20\t\t\tc \n      ADD \t\t\t6 amount) public o\n      PUSH [tag] 25\t\t\t\n      JUMP \t\t\t0Burnable, Ownable {\\n    cons...\n    tag 5\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 2\t\t\t\n      SLOAD \t\t\t\n    tag 33\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 25\t\t\t\n      JUMP \t\t\timals() public view virtual ov...\n    tag 6\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 27\t\t\t\n      PUSH [tag] 38\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 39\t\t\t\n      JUMP \t\t\t\n    tag 38\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 40\t\t\t\n      JUMP \t\t\t\n    tag 7\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 8\t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 25\t\t\t\n      JUMP \t\t\t\n    tag 8\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 27\t\t\t\n      PUSH [tag] 47\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 29\t\t\t\n      JUMP \t\t\t\n    tag 47\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 48\t\t\t\n      JUMP \t\t\t\n    tag 9\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 50\t\t\t\n      PUSH [tag] 51\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 29\t\t\t\n      JUMP \t\t\t\n    tag 51\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 52\t\t\t\n      JUMP \t\t\t\n    tag 50\t\t\t\n      JUMPDEST \t\t\t\n      STOP \t\t\t\n    tag 10\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 50\t\t\t\n      PUSH [tag] 54\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 55\t\t\t\n      JUMP \t\t\t\n    tag 54\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 56\t\t\t\n      JUMP \t\t\t\n    tag 11\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 33\t\t\t\n      PUSH [tag] 58\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 59\t\t\t\n      JUMP \t\t\t\n    tag 58\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      SWAP1 \t\t\t\n      KECCAK256 \t\t\t\n      SLOAD \t\t\t\n      SWAP1 \t\t\t\n      JUMP \t\t\t\n    tag 12\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 50\t\t\t\n      PUSH [tag] 63\t\t\t\n      JUMP \t\t\t\n    tag 13\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 50\t\t\t\n      PUSH [tag] 65\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 29\t\t\t\n      JUMP \t\t\t\n    tag 65\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 66\t\t\t\n      JUMP \t\t\t\n    tag 14\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 5\t\t\t\n      SLOAD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 25\t\t\t\n      JUMP \t\t\t\n    tag 15\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 23\t\t\t\n      PUSH [tag] 72\t\t\t\n      JUMP \t\t\t\n    tag 16\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 27\t\t\t\n      PUSH [tag] 75\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 29\t\t\t\n      JUMP \t\t\t\n    tag 75\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 76\t\t\t\n      JUMP \t\t\t\n    tag 17\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 27\t\t\t\n      PUSH [tag] 79\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 29\t\t\t\n      JUMP \t\t\t\n    tag 79\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 80\t\t\t\n      JUMP \t\t\t\n    tag 18\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 33\t\t\t\n      PUSH [tag] 83\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 84\t\t\t\n      JUMP \t\t\t\n    tag 83\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      SWAP2 \t\t\t\n      DUP3 \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 1\t\t\t\n      PUSH 20\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      KECCAK256 \t\t\t\n      SWAP4 \t\t\t\n      SWAP1 \t\t\t\n      SWAP5 \t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      MSTORE \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      MSTORE \t\t\t\n      KECCAK256 \t\t\t\n      SLOAD \t\t\t\n      SWAP1 \t\t\t\n      JUMP \t\t\t\n    tag 19\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 50\t\t\t\n      PUSH [tag] 88\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 59\t\t\t\n      JUMP \t\t\t\n    tag 88\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 89\t\t\t\n      JUMP \t\t\t\n    tag 24\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 60\t\t\t\n      PUSH 3\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH [tag] 91\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 92\t\t\t\n      JUMP \t\t\t\n    tag 91\t\t\t\n      JUMPDEST \t\t\t\n      DUP1 \t\t\t\n      PUSH 1F\t\t\t\n      ADD \t\t\t\n      PUSH 20\t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      DIV \t\t\t\n      MUL \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      DUP1 \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      DUP3 \t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH [tag] 93\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 92\t\t\t\n      JUMP \t\t\t\n    tag 93\t\t\t\n      JUMPDEST \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 94\t\t\t\n      JUMPI \t\t\t\n      DUP1 \t\t\t\n      PUSH 1F\t\t\t\n      LT \t\t\t\n      PUSH [tag] 95\t\t\t\n      JUMPI \t\t\t\n      PUSH 100\t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      SLOAD \t\t\t\n      DIV \t\t\t\n      MUL \t\t\t\n      DUP4 \t\t\t\n      MSTORE \t\t\t\n      SWAP2 \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      SWAP2 \t\t\t\n      PUSH [tag] 94\t\t\t\n      JUMP \t\t\t\n    tag 95\t\t\t\n      JUMPDEST \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH 0\t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      PUSH 0\t\t\t\n      KECCAK256 \t\t\t\n      SWAP1 \t\t\t\n    tag 96\t\t\t\n      JUMPDEST \t\t\t\n      DUP2 \t\t\t\n      SLOAD \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      SWAP1 \t\t\t\n      PUSH 1\t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      GT \t\t\t\n      PUSH [tag] 96\t\t\t\n      JUMPI \t\t\t\n      DUP3 \t\t\t\n      SWAP1 \t\t\t\n      SUB \t\t\t\n      PUSH 1F\t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP2 \t\t\t\n    tag 94\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP1 \t\t\t\n      JUMP \t\t\t\n    tag 30\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      CALLER \t\t\t\n      PUSH [tag] 100\t\t\t\n      DUP2 \t\t\t\n      DUP6 \t\t\t\n      DUP6 \t\t\t\n      PUSH [tag] 101\t\t\t\n      JUMP \t\t\t\n    tag 100\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n    tag 97\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 40\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      CALLER \t\t\t\n      PUSH [tag] 105\t\t\t\n      DUP6 \t\t\t\n      DUP3 \t\t\t\n      DUP6 \t\t\t\n      PUSH [tag] 106\t\t\t\n      JUMP \t\t\t\n    tag 105\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 107\t\t\t\n      DUP6 \t\t\t\n      DUP6 \t\t\t\n      DUP6 \t\t\t\n      PUSH [tag] 108\t\t\t\n      JUMP \t\t\t\n    tag 107\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      PUSH 1\t\t\t\n      SWAP5 \t\t\t\n      SWAP4 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 48\t\t\t\n      JUMPDEST \t\t\t\n      CALLER \t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 1\t\t\t\n      PUSH 20\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      KECCAK256 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP8 \t\t\t\n      AND \t\t\t\n      DUP5 \t\t\t\n      MSTORE \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      MSTORE \t\t\t\n      DUP2 \t\t\t\n      KECCAK256 \t\t\t\n      SLOAD \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 100\t\t\t\n      SWAP1 \t\t\t\n      DUP3 \t\t\t\n      SWAP1 \t\t\t\n      DUP7 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 113\t\t\t\n      SWAP1 \t\t\t\n      DUP8 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 114\t\t\t\n      JUMP \t\t\t\n    tag 113\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 101\t\t\t\n      JUMP \t\t\t\n    tag 52\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 5\t\t\t\n      SLOAD \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      CALLER \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 118\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 119\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 120\t\t\t\n      JUMP \t\t\t\n    tag 119\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 118\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 122\t\t\t\n      DUP3 \t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 123\t\t\t\n      JUMP \t\t\t\n    tag 122\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 56\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 125\t\t\t\n      CALLER \t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 127\t\t\t\n      JUMP \t\t\t\n    tag 125\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 63\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 5\t\t\t\n      SLOAD \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      CALLER \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 132\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 119\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 120\t\t\t\n      JUMP \t\t\t\n    tag 132\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 135\t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 136\t\t\t\n      JUMP \t\t\t\n    tag 135\t\t\t\n      JUMPDEST \t\t\t\n      JUMP \t\t\t\n    tag 66\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 138\t\t\t\n      DUP3 \t\t\t\n      CALLER \t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 106\t\t\t\n      JUMP \t\t\t\n    tag 138\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 122\t\t\t\n      DUP3 \t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 127\t\t\t\n      JUMP \t\t\t\n    tag 72\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 60\t\t\t\n      PUSH 4\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH [tag] 91\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 92\t\t\t\n      JUMP \t\t\t\n    tag 76\t\t\t\n      JUMPDEST \t\t\t\n      CALLER \t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 1\t\t\t\n      PUSH 20\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      KECCAK256 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP8 \t\t\t\n      AND \t\t\t\n      DUP5 \t\t\t\n      MSTORE \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      MSTORE \t\t\t\n      DUP2 \t\t\t\n      KECCAK256 \t\t\t\n      SLOAD \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      DUP4 \t\t\t\n      DUP2 \t\t\t\n      LT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 150\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 25\t\t\t\n      PUSH 24\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77\t\t\t\n      PUSH 44\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 207A65726F\t\t\t\n      PUSH D8\t\t\t\n      SHL \t\t\t\n      PUSH 64\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 84\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 119\t\t\t\n      JUMP \t\t\t\n    tag 150\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 107\t\t\t\n      DUP3 \t\t\t\n      DUP7 \t\t\t\n      DUP7 \t\t\t\n      DUP5 \t\t\t\n      SUB \t\t\t\n      PUSH [tag] 101\t\t\t\n      JUMP \t\t\t\n    tag 80\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      CALLER \t\t\t\n      PUSH [tag] 100\t\t\t\n      DUP2 \t\t\t\n      DUP6 \t\t\t\n      DUP6 \t\t\t\n      PUSH [tag] 108\t\t\t\n      JUMP \t\t\t\n    tag 89\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 5\t\t\t\n      SLOAD \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      CALLER \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 161\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 119\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 120\t\t\t\n      JUMP \t\t\t\n    tag 161\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      PUSH [tag] 164\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 26\t\t\t\n      PUSH 24\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061\t\t\t\n      PUSH 44\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 646472657373\t\t\t\n      PUSH D0\t\t\t\n      SHL \t\t\t\n      PUSH 64\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 84\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 119\t\t\t\n      JUMP \t\t\t\n    tag 164\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 125\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 136\t\t\t\n      JUMP \t\t\t\n    tag 101\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP4 \t\t\t\n      AND \t\t\t\n      PUSH [tag] 170\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      DUP1 \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 45524332303A20617070726F76652066726F6D20746865207A65726F20616464\t\t\t\n      PUSH 44\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 72657373\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      PUSH 64\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 84\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 119\t\t\t\n      JUMP \t\t\t\n    tag 170\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP3 \t\t\t\n      AND \t\t\t\n      PUSH [tag] 173\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 22\t\t\t\n      PUSH 24\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 45524332303A20617070726F766520746F20746865207A65726F206164647265\t\t\t\n      PUSH 44\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 7373\t\t\t\n      PUSH F0\t\t\t\n      SHL \t\t\t\n      PUSH 64\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 84\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 119\t\t\t\n      JUMP \t\t\t\n    tag 173\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP4 \t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 1\t\t\t\n      PUSH 20\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      KECCAK256 \t\t\t\n      SWAP5 \t\t\t\n      DUP8 \t\t\t\n      AND \t\t\t\n      DUP1 \t\t\t\n      DUP5 \t\t\t\n      MSTORE \t\t\t\n      SWAP5 \t\t\t\n      DUP3 \t\t\t\n      MSTORE \t\t\t\n      SWAP2 \t\t\t\n      DUP3 \t\t\t\n      SWAP1 \t\t\t\n      KECCAK256 \t\t\t\n      DUP6 \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      SWAP1 \t\t\t\n      MLOAD \t\t\t\n      DUP5 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925\t\t\t\n      SWAP2 \t\t\t\n      ADD \t\t\t\n    tag 176\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      LOG3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 106\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP4 \t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 1\t\t\t\n      PUSH 20\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      KECCAK256 \t\t\t\n      SWAP4 \t\t\t\n      DUP7 \t\t\t\n      AND \t\t\t\n      DUP4 \t\t\t\n      MSTORE \t\t\t\n      SWAP3 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      KECCAK256 \t\t\t\n      SLOAD \t\t\t\n      PUSH 0\t\t\t\n      NOT \t\t\t\n      DUP2 \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 183\t\t\t\n      JUMPI \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      LT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 180\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 1D\t\t\t\n      PUSH 24\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000\t\t\t\n      PUSH 44\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 64\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 119\t\t\t\n      JUMP \t\t\t\n    tag 180\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 183\t\t\t\n      DUP5 \t\t\t\n      DUP5 \t\t\t\n      DUP5 \t\t\t\n      DUP5 \t\t\t\n      SUB \t\t\t\n      PUSH [tag] 101\t\t\t\n      JUMP \t\t\t\n    tag 183\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 108\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP4 \t\t\t\n      AND \t\t\t\n      PUSH [tag] 185\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 25\t\t\t\n      PUSH 24\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 45524332303A207472616E736665722066726F6D20746865207A65726F206164\t\t\t\n      PUSH 44\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 6472657373\t\t\t\n      PUSH D8\t\t\t\n      SHL \t\t\t\n      PUSH 64\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 84\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 119\t\t\t\n      JUMP \t\t\t\n    tag 185\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP3 \t\t\t\n      AND \t\t\t\n      PUSH [tag] 188\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 23\t\t\t\n      PUSH 24\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 45524332303A207472616E7366657220746F20746865207A65726F2061646472\t\t\t\n      PUSH 44\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 657373\t\t\t\n      PUSH E8\t\t\t\n      SHL \t\t\t\n      PUSH 64\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 84\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 119\t\t\t\n      JUMP \t\t\t\n    tag 188\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP4 \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      SWAP1 \t\t\t\n      KECCAK256 \t\t\t\n      SLOAD \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      LT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 193\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 26\t\t\t\n      PUSH 24\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 45524332303A207472616E7366657220616D6F756E7420657863656564732062\t\t\t\n      PUSH 44\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 616C616E6365\t\t\t\n      PUSH D0\t\t\t\n      SHL \t\t\t\n      PUSH 64\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 84\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 119\t\t\t\n      JUMP \t\t\t\n    tag 193\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP1 \t\t\t\n      DUP6 \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      DUP1 \t\t\t\n      DUP3 \t\t\t\n      KECCAK256 \t\t\t\n      DUP6 \t\t\t\n      DUP6 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      SWAP2 \t\t\t\n      DUP6 \t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      KECCAK256 \t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      DUP5 \t\t\t\n      SWAP3 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 196\t\t\t\n      SWAP1 \t\t\t\n      DUP5 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 114\t\t\t\n      JUMP \t\t\t\n    tag 196\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      POP \t\t\t\n      DUP3 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      DUP5 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF\t\t\t\n      DUP5 \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH [tag] 197\t\t\t\n      SWAP2 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      JUMP \t\t\timals() public view virtual ov...\n    tag 197\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      LOG3 \t\t\t\n      PUSH [tag] 183\t\t\t\n      JUMP \t\t\t\n    tag 123\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP3 \t\t\t\n      AND \t\t\t\n      PUSH [tag] 201\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 1F\t\t\t\n      PUSH 24\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 45524332303A206D696E7420746F20746865207A65726F206164647265737300\t\t\t\n      PUSH 44\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 64\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 119\t\t\t\n      JUMP \t\t\t\n    tag 201\t\t\t\n      JUMPDEST \t\t\t\n      DUP1 \t\t\t\n      PUSH 2\t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      DUP3 \t\t\t\n      SLOAD \t\t\t\n      PUSH [tag] 205\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 114\t\t\t\n      JUMP \t\t\t\n    tag 205\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      SSTORE \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP3 \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      DUP2 \t\t\t\n      KECCAK256 \t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      DUP4 \t\t\t\n      SWAP3 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 206\t\t\t\n      SWAP1 \t\t\t\n      DUP5 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 114\t\t\t\n      JUMP \t\t\t\n    tag 206\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      SSTORE \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP4 \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF\t\t\t\n      SWAP1 \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      LOG3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 127\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP3 \t\t\t\n      AND \t\t\t\n      PUSH [tag] 210\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 21\t\t\t\n      PUSH 24\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 45524332303A206275726E2066726F6D20746865207A65726F20616464726573\t\t\t\n      PUSH 44\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 73\t\t\t\n      PUSH F8\t\t\t\n      SHL \t\t\t\n      PUSH 64\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 84\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 119\t\t\t\n      JUMP \t\t\t\n    tag 210\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP3 \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      SWAP1 \t\t\t\n      KECCAK256 \t\t\t\n      SLOAD \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      LT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 214\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 22\t\t\t\n      PUSH 24\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 45524332303A206275726E20616D6F756E7420657863656564732062616C616E\t\t\t\n      PUSH 44\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 6365\t\t\t\n      PUSH F0\t\t\t\n      SHL \t\t\t\n      PUSH 64\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 84\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 119\t\t\t\n      JUMP \t\t\t\n    tag 214\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP4 \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      DUP2 \t\t\t\n      KECCAK256 \t\t\t\n      DUP4 \t\t\t\n      DUP4 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      PUSH 2\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      DUP5 \t\t\t\n      SWAP3 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 217\t\t\t\n      SWAP1 \t\t\t\n      DUP5 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 218\t\t\t\n      JUMP \t\t\t\n    tag 217\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      SSTORE \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP3 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP6 \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF\t\t\t\n      SWAP1 \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 176\t\t\t\n      JUMP \t\t\timals() public view virtual ov...\n    tag 136\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 5\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP4 \t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      NOT \t\t\t\n      DUP4 \t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      OR \t\t\t\n      SWAP1 \t\t\t\n      SWAP4 \t\t\t\n      SSTORE \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      SWAP2 \t\t\t\n      AND \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      DUP3 \t\t\t\n      SWAP1 \t\t\t\n      PUSH 8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0\t\t\t\n      SWAP1 \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      LOG3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 26\t\t\t ██████   ██████  ██   ██ ████...\n      JUMPDEST \t\t\t ██████   ██████  ██   ██ ████...\n      PUSH 0\t\t\t█ ██\n      PUSH 20\t\t\t  \n      DUP1 \t\t\t  \n      DUP4 \t\t\t██   ██ █\n      MSTORE \t\t\t██     ██   ██ ██    \n      DUP4 \t\t\t█    █\n      MLOAD \t\t\t  ██ ██    ██\n      DUP1 \t\t\t████  \n      DUP3 \t\t\t █\n      DUP6 \t\t\t   ██ ██ \n      ADD \t\t\t ██    ██ ██    ██\n      MSTORE \t\t\t██████  ██    ██ ██    ██ ████...\n      PUSH 0\t\t\t \n    tag 228\t\t\t██      ██    ██ ██    ██ ██  ...\n      JUMPDEST \t\t\t██      ██    ██ ██    ██ ██  ...\n      DUP2 \t\t\t██ ██ \n      DUP2 \t\t\t \n      LT \t\t\t██    ██ ██  \n      ISZERO \t\t\t██      ██    ██ ██    ██ ██  ...\n      PUSH [tag] 230\t\t\t██      ██    ██ ██    ██ ██  ...\n      JUMPI \t\t\t██      ██    ██ ██    ██ ██  ...\n      DUP6 \t\t\t█   ██████  ██\n      DUP2 \t\t\t█   ██████  ██\n      ADD \t\t\t█   ██████  ██\n      DUP4 \t\t\t█████   ██████  ██   ██\n      ADD \t\t\t█████   ██████  ██   ██\n      MLOAD \t\t\t███  ██████   ██████  ██   ██ \n      DUP6 \t\t\t ██ ██       ██  \n      DUP3 \t\t\t ██ ██       ██  \n      ADD \t\t\t ██ ██       ██  \n      PUSH 40\t\t\t\\n \n      ADD \t\t\t██   ██ ██       ██  ██\\n █\n      MSTORE \t\t\t██     ██   ██ ██       ██  ██...\n      DUP3 \t\t\t ██  ██   \n      ADD \t\t\t ██  ██   \n      PUSH [tag] 228\t\t\t██      ██    ██ ██    ██ ██  ...\n      JUMP \t\t\t██      ██    ██ ██    ██ ██  ...\n    tag 230\t\t\t██      ██    ██ ██    ██ ██  ...\n      JUMPDEST \t\t\t██      ██    ██ ██    ██ ██  ...\n      POP \t\t\t   \n      PUSH 0\t\t\t\\n\n      PUSH 40\t\t\t██\n      DUP3 \t\t\t██████\n      DUP7 \t\t\t█ ██████ \n      ADD \t\t\t██ ██ ██████  ███████ \n      ADD \t\t\t█   ██ ██ ██████  ███████   ██...\n      MSTORE \t\t\t████  ██   ██ ██ ██████  █████...\n      PUSH 40\t\t\too\n      PUSH 1F\t\t\t//\n      NOT \t\t\ttps://w\n      PUSH 1F\t\t\tr:\n      DUP4 \t\t\tct fas\n      ADD \t\t\troject faster: \n      AND \t\t\tur project faster: https://ww\n      DUP6 \t\t\tnd build \n      ADD \t\t\tt, and build your project fast...\n      ADD \t\t\ttract, and build your project ...\n      SWAP3 \t\t\tmart contract, and build your ...\n      POP \t\t\tmart contract, and build your ...\n      POP \t\t\tmart contract, and build your ...\n      POP \t\t\tmart contract, and build your ...\n      SWAP3 \t\t\t ██████   ██████  ██   ██ ████...\n      SWAP2 \t\t\t ██████   ██████  ██   ██ ████...\n      POP \t\t\t ██████   ██████  ██   ██ ████...\n      POP \t\t\t ██████   ██████  ██   ██ ████...\n      JUMP \t\t\t ██████   ██████  ██   ██ ████...\n    tag 224\t\t\titter: https://twitter.com/coo...\n      JUMPDEST \t\t\titter: https://twitter.com/coo...\n      DUP1 \t\t\tWzsfPcfHrk\\n\\nFind thi\n      CALLDATALOAD \t\t\tWzsfPcfHrk\\n\\nFind thi\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t://www.cookbook.dev/contracts/...\n      AND \t\t\t://www.cookbook.dev/contracts/...\n      DUP2 \t\t\took: https://www.cookbook.dev/...\n      EQ \t\t\took: https://www.cookbook.dev/...\n      PUSH [tag] 232\t\t\tt on Cookbook: https://www.coo...\n      JUMPI \t\t\tt on Cookbook: https://www.coo...\n      PUSH 0\t\t\tn\n      DUP1 \t\t\to\n      REVERT \t\t\tatoshiToken/\n    tag 232\t\t\tt on Cookbook: https://www.coo...\n      JUMPDEST \t\t\tt on Cookbook: https://www.coo...\n      SWAP2 \t\t\titter: https://twitter.com/coo...\n      SWAP1 \t\t\titter: https://twitter.com/coo...\n      POP \t\t\titter: https://twitter.com/coo...\n      JUMP \t\t\titter: https://twitter.com/coo...\n    tag 29\t\t\t\\n// contracts/GreenSatoshiTok...\n      JUMPDEST \t\t\t\\n// contracts/GreenSatoshiTok...\n      PUSH 0\t\t\tpragma\n      DUP1 \t\t\tolidit\n      PUSH 40\t\t\t0B\n      DUP4 \t\t\tport \"./E\n      DUP6 \t\t\t.sol\";\\n\n      SUB \t\t\tRC20.sol\";\\nimport \"./ER\n      SLT \t\t\t\"./ERC20.sol\";\\nimport \"./ERC2...\n      ISZERO \t\t\trt \"./ERC20.sol\";\\nimport \"./E...\n      PUSH [tag] 234\t\t\trt \"./ERC20.sol\";\\nimport \"./E...\n      JUMPI \t\t\trt \"./ERC20.sol\";\\nimport \"./E...\n      PUSH 0\t\t\ti\n      DUP1 \t\t\t\"\n      REVERT \t\t\tble.sol\";\\nim\n    tag 234\t\t\trt \"./ERC20.sol\";\\nimport \"./E...\n      JUMPDEST \t\t\trt \"./ERC20.sol\";\\nimport \"./E...\n      PUSH [tag] 235\t\t\t\\n\\n/**\\n * Green Satoshi Toke...\n      DUP4 \t\t\tshi Token\n      PUSH [tag] 224\t\t\t\\n\\n/**\\n * Green Satoshi Toke...\n      JUMP \t\t\t\\n\\n/**\\n * Green Satoshi Toke...\n    tag 235\t\t\t\\n\\n/**\\n * Green Satoshi Toke...\n      JUMPDEST \t\t\t\\n\\n/**\\n * Green Satoshi Toke...\n      SWAP5 \t\t\table.sol\";\\n\\n/**\\n * Green Sa...\n      PUSH 20\t\t\t i\n      SWAP4 \t\t\teenSatoshiToken is\n      SWAP1 \t\t\teenSatoshiToken is\n      SWAP4 \t\t\teenSatoshiToken is\n      ADD \t\t\teenSatoshiToken is\n      CALLDATALOAD \t\t\t/\\ncontract GreenSatoshiToken ...\n      SWAP4 \t\t\t/\\ncontract GreenSatoshiToken ...\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\\n// contracts/GreenSatoshiTok...\n    tag 39\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      PUSH 0\t\t\t\n      PUSH 60\t\t\t\n      DUP5 \t\t\t\n      DUP7 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 239\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 239\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 240\t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 224\t\t\t\n      JUMP \t\t\t\n    tag 240\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 241\t\t\t\n      PUSH 20\t\t\t\n      DUP6 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 224\t\t\t\n      JUMP \t\t\t\n    tag 241\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH 40\t\t\t\n      DUP5 \t\t\t\n      ADD \t\t\t\n      CALLDATALOAD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      JUMP \t\t\t\n    tag 55\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      DUP5 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 244\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 244\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      CALLDATALOAD \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 59\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      DUP5 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 246\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 246\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 247\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 224\t\t\t\n      JUMP \t\t\t\n    tag 247\t\t\t\n      JUMPDEST \t\t\t\n      SWAP4 \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 84\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      PUSH 40\t\t\t\n      DUP4 \t\t\t\n      DUP6 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 250\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 250\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 251\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 224\t\t\t\n      JUMP \t\t\t\n    tag 251\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 252\t\t\t\n      PUSH 20\t\t\t\n      DUP5 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 224\t\t\t\n      JUMP \t\t\t\n    tag 252\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 92\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SHR \t\t\t\n      SWAP1 \t\t\t\n      DUP3 \t\t\t\n      AND \t\t\t\n      DUP1 \t\t\t\n      PUSH [tag] 254\t\t\t\n      JUMPI \t\t\t\n      PUSH 7F\t\t\t\n      DUP3 \t\t\t\n      AND \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n    tag 254\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      LT \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH [tag] 255\t\t\t\n      JUMPI \t\t\t\n      PUSH 4E487B71\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      PUSH 0\t\t\t\n      MSTORE \t\t\t\n      PUSH 22\t\t\t\n      PUSH 4\t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 255\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 225\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 4E487B71\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      PUSH 0\t\t\t\n      MSTORE \t\t\t\n      PUSH 11\t\t\t\n      PUSH 4\t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 114\t\t\t\n      JUMPDEST \t\t\t\n      DUP1 \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      DUP1 \t\t\t\n      DUP3 \t\t\t\n      GT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 97\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 97\t\t\t\n      PUSH [tag] 225\t\t\t\n      JUMP \t\t\t\n    tag 120\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      DUP1 \t\t\t\n      DUP3 \t\t\t\n      MSTORE \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572\t\t\t\n      PUSH 40\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 60\t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      JUMP \t\t\t\n    tag 218\t\t\t\n      JUMPDEST \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      GT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 97\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 97\t\t\t\n      PUSH [tag] 225\t\t\t\n      JUMP \t\t\t\n    .data\n"
}